{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport WeekView from './WeekView'; // Import the new WeekView component\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({\n    habitId: null,\n    date: null\n  });\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = (status, customValue) => {\n    if (status) return customValue || '✔️'; // Checkmark if no custom value\n    return ''; // No symbol for incomplete\n  };\n  const handleDateChange = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n  const handleDateInputChange = e => {\n    setCurrentDate(e.target.value);\n  };\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({\n      habitId,\n      date\n    });\n  };\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = {\n        ...entry,\n        customValue: value,\n        completed: true\n      };\n      updateHabitEntry(entry.id, updatedEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = {\n        habit: habitId,\n        date,\n        customValue: value,\n        completed: true\n      };\n      createHabitEntry(newEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n  const renderDefaultView = () => /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 26\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n    const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n    const status = entry ? entry.completed : false;\n    const customValue = entry ? entry.customValue : '';\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      onDoubleClick: () => handleDoubleClick(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, editStatus.habitId === habit.id && editStatus.date === currentDate ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: customValue,\n      onChange: e => handleInputChange(e, habit.id, currentDate),\n      onBlur: () => setEditStatus({\n        habitId: null,\n        date: null\n      }),\n      autoFocus: true,\n      maxLength: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => handleToggle(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(status, customValue))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"No habits found\"))));\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const habitEntriesByDate = habits.reduce((acc, habit) => {\n      habit.entries && habit.entries.forEach(entry => {\n        if (!acc[entry.date]) {\n          acc[entry.date] = [];\n        }\n        acc[entry.date].push({\n          ...entry,\n          habitId: habit.id,\n          habitName: habit.name\n        });\n      });\n      return acc;\n    }, {});\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"month-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"Habits\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, [...Array(daysInMonth).keys()].map(day => {\n      const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day + 1).toISOString().split('T')[0];\n      const entries = habitEntriesByDate[date] || [];\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, entries.map(entry => /*#__PURE__*/React.createElement(\"div\", {\n        key: entry.habitId,\n        className: `habit-entry ${entry.completed ? 'completed' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, entry.habitName, \": \", getStatusSymbol(entry.completed, entry.customValue)))));\n    })));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"habit-tracker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: currentDate,\n    onChange: handleDateInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleViewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, viewMode === 'default' ? 'Switch to Month View' : 'Switch to Default View'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, isEditMode ? 'Done Editing' : 'Edit Habits'))), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, viewMode === 'default' ? renderDefaultView() : renderMonthView(), /*#__PURE__*/React.createElement(WeekView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    className: \"add-habit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"Add new habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","WeekView","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","currentDate","setCurrentDate","Date","toISOString","split","viewMode","setViewMode","editStatus","setEditStatus","habitId","date","fetchHabits","response","data","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","filter","id","handleToggle","find","h","entry","entries","completed","updatedHabits","map","getStatusSymbol","status","customValue","handleDateChange","days","newDate","setDate","getDate","handleDateInputChange","target","value","toggleViewMode","handleDoubleClick","handleInputChange","charAt","updatedEntry","then","catch","newEntry","renderDefaultView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","key","onDoubleClick","type","onChange","onBlur","autoFocus","maxLength","onClick","colSpan","renderMonthView","daysInMonth","habitEntriesByDate","reduce","acc","forEach","push","habitName","keys","day","onSubmit","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport WeekView from './WeekView'; // Import the new WeekView component\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({ habitId: null, date: null });\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status, customValue) => {\n    if (status) return customValue || '✔️'; // Checkmark if no custom value\n    return ''; // No symbol for incomplete\n  };\n\n  const handleDateChange = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n\n  const handleDateInputChange = (e) => {\n    setCurrentDate(e.target.value);\n  };\n\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({ habitId, date });\n  };\n\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = { ...entry, customValue: value, completed: true };\n      updateHabitEntry(entry.id, updatedEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = { habit: habitId, date, customValue: value, completed: true };\n      createHabitEntry(newEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: [...(h.entries || []), response.data] };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n\n  const renderDefaultView = () => (\n    <table className=\"habit-table\">\n      <thead>\n        <tr>\n          <th>Habit</th>\n          <th>Status</th>\n          {isEditMode && <th>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n          const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n          const status = entry ? entry.completed : false;\n          const customValue = entry ? entry.customValue : '';\n\n          return (\n            <tr key={habit.id}>\n              <td>{habit.name}</td>\n              <td onDoubleClick={() => handleDoubleClick(habit.id, currentDate)}>\n                {editStatus.habitId === habit.id && editStatus.date === currentDate ? (\n                  <input\n                    type=\"text\"\n                    value={customValue}\n                    onChange={(e) => handleInputChange(e, habit.id, currentDate)}\n                    onBlur={() => setEditStatus({ habitId: null, date: null })}\n                    autoFocus\n                    maxLength=\"1\"\n                  />\n                ) : (\n                  <span onClick={() => handleToggle(habit.id, currentDate)}>\n                    {getStatusSymbol(status, customValue)}\n                  </span>\n                )}\n              </td>\n              {isEditMode && (\n                <td>\n                  <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                </td>\n              )}\n            </tr>\n          );\n        }) : (\n          <tr>\n            <td colSpan=\"3\">No habits found</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const habitEntriesByDate = habits.reduce((acc, habit) => {\n      habit.entries && habit.entries.forEach(entry => {\n        if (!acc[entry.date]) {\n          acc[entry.date] = [];\n        }\n        acc[entry.date].push({ ...entry, habitId: habit.id, habitName: habit.name });\n      });\n      return acc;\n    }, {});\n\n    return (\n      <table className=\"month-table\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Habits</th>\n          </tr>\n        </thead>\n        <tbody>\n          {[...Array(daysInMonth).keys()].map(day => {\n            const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day + 1).toISOString().split('T')[0];\n            const entries = habitEntriesByDate[date] || [];\n            return (\n              <tr key={date}>\n                <td>{date}</td>\n                <td>\n                  {entries.map(entry => (\n                    <div key={entry.habitId} className={`habit-entry ${entry.completed ? 'completed' : ''}`}>\n                      {entry.habitName}: {getStatusSymbol(entry.completed, entry.customValue)}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <div className=\"habit-tracker\">\n      <header className=\"header\">\n        <h1>Habit Tracker</h1>\n        <div className=\"navigation\">\n          <button onClick={() => handleDateChange(-1)}>Previous</button>\n          <input type=\"date\" value={currentDate} onChange={handleDateInputChange} />\n          <button onClick={() => handleDateChange(1)}>Next</button>\n          <button onClick={toggleViewMode}>\n            {viewMode === 'default' ? 'Switch to Month View' : 'Switch to Default View'}\n          </button>\n          <button onClick={() => setIsEditMode(!isEditMode)}>\n            {isEditMode ? 'Done Editing' : 'Edit Habits'}\n          </button>\n        </div>\n      </header>\n      <main>\n        {viewMode === 'default' ? renderDefaultView() : renderMonthView()}\n        <WeekView /> {/* Add the new WeekView component here */}\n      </main>\n      <form onSubmit={addHabit} className=\"add-habit-form\">\n        <input\n          type=\"text\"\n          value={newHabit}\n          onChange={(e) => setNewHabit(e.target.value)}\n          placeholder=\"Add new habit\"\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}