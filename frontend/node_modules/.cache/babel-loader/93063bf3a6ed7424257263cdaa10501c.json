{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js\";\nimport React, { useState, useEffect } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = ({\n  currentDate\n}) => {\n  const [tasks, setTasks] = useState({\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: [],\n    Sunday: []\n  });\n  const [newTask, setNewTask] = useState({\n    Monday: '',\n    Tuesday: '',\n    Wednesday: '',\n    Thursday: '',\n    Friday: '',\n    Saturday: '',\n    Sunday: ''\n  });\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const startOfWeek = new Date(currentDate);\n  startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1); // Monday as the first day of the week\n\n  const getDateForDay = dayIndex => {\n    const date = new Date(startOfWeek);\n    date.setDate(startOfWeek.getDate() + dayIndex);\n    return date.getDate();\n  };\n  const handleAddTask = (day, task) => {\n    if (task) {\n      setTasks({\n        ...tasks,\n        [day]: [...tasks[day], {\n          task,\n          completed: false\n        }]\n      });\n      setNewTask({\n        ...newTask,\n        [day]: ''\n      }); // Clear the input field\n    }\n  };\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? {\n      ...t,\n      completed: !t.completed\n    } : t);\n    setTasks({\n      ...tasks,\n      [day]: newTasks\n    });\n  };\n  const handleInputChange = (day, event) => {\n    setNewTask({\n      ...newTask,\n      [day]: event.target.value\n    });\n  };\n  const handleInputKeyPress = (day, event) => {\n    if (event.key === 'Enter') {\n      handleAddTask(day, newTask[day]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"week-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, daysOfWeek.map((day, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"day-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, day.charAt(0), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), getDateForDay(index), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, tasks[day].map((task, taskIndex) => /*#__PURE__*/React.createElement(\"li\", {\n    key: taskIndex,\n    className: task.completed ? 'completed-task' : '',\n    onClick: () => handleToggleTask(day, taskIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, task.task))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask[day],\n    onChange: event => handleInputChange(day, event),\n    onKeyPress: event => handleInputKeyPress(day, event),\n    placeholder: \"New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default WeekView;","map":{"version":3,"names":["React","useState","useEffect","WeekView","currentDate","tasks","setTasks","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","newTask","setNewTask","daysOfWeek","startOfWeek","Date","setDate","getDate","getDay","getDateForDay","dayIndex","date","handleAddTask","day","task","completed","handleToggleTask","index","newTasks","map","t","i","handleInputChange","event","target","value","handleInputKeyPress","key","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","charAt","taskIndex","onClick","type","onChange","onKeyPress","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = ({ currentDate }) => {\n  const [tasks, setTasks] = useState({\n    Monday: [], Tuesday: [], Wednesday: [], Thursday: [], Friday: [], Saturday: [], Sunday: []\n  });\n\n  const [newTask, setNewTask] = useState({\n    Monday: '', Tuesday: '', Wednesday: '', Thursday: '', Friday: '', Saturday: '', Sunday: ''\n  });\n\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n  const startOfWeek = new Date(currentDate);\n  startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1); // Monday as the first day of the week\n\n  const getDateForDay = (dayIndex) => {\n    const date = new Date(startOfWeek);\n    date.setDate(startOfWeek.getDate() + dayIndex);\n    return date.getDate();\n  };\n\n  const handleAddTask = (day, task) => {\n    if (task) {\n      setTasks({ ...tasks, [day]: [...tasks[day], { task, completed: false }] });\n      setNewTask({ ...newTask, [day]: '' }); // Clear the input field\n    }\n  };\n\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? { ...t, completed: !t.completed } : t);\n    setTasks({ ...tasks, [day]: newTasks });\n  };\n\n  const handleInputChange = (day, event) => {\n    setNewTask({ ...newTask, [day]: event.target.value });\n  };\n\n  const handleInputKeyPress = (day, event) => {\n    if (event.key === 'Enter') {\n      handleAddTask(day, newTask[day]);\n    }\n  };\n\n  return (\n    <div className=\"week-view\">\n      <table className=\"week-table\">\n        <thead>\n          <tr>\n            <th></th> {/* Empty header for day initials and date */}\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {daysOfWeek.map((day, index) => (\n            <tr key={day}>\n              <td className=\"day-column\">\n                {day.charAt(0)} {/* Display first letter of the day */}\n                <br />\n                {getDateForDay(index)} {/* Display the correct date for the day */}\n              </td>\n              <td>\n                <ul>\n                  {tasks[day].map((task, taskIndex) => (\n                    <li key={taskIndex} className={task.completed ? 'completed-task' : ''} onClick={() => handleToggleTask(day, taskIndex)}>\n                      {task.task}\n                    </li>\n                  ))}\n                </ul>\n                <input\n                  type=\"text\"\n                  value={newTask[day]}\n                  onChange={(event) => handleInputChange(day, event)}\n                  onKeyPress={(event) => handleInputKeyPress(day, event)}\n                  placeholder=\"New Task\"\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeekView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}