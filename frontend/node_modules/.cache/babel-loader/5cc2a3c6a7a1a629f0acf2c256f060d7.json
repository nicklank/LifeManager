{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit || !habit.entries) return;\n    const entry = habit.entries.find(e => e.date === date);\n    console.log('Toggling habit:', habit);\n    console.log('Entry found:', entry);\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        console.log('Updated entry response:', response.data);\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        console.log('Created entry response:', response.data);\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = status => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, isEditMode ? 'Done' : 'Edit Habits'), isEditMode && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"New Habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Add Habit\")), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 28\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n    const today = new Date().toISOString().split('T')[0];\n    const entry = habit.entries ? habit.entries.find(e => e.date === today) : null;\n    const isCompleted = entry ? entry.completed : false;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, today),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(isCompleted))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: isEditMode ? \"3\" : \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 20\n    }\n  }, \"No habits found\")))));\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","fetchHabits","response","data","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","habitId","filter","id","handleToggle","date","find","h","entries","entry","completed","updatedHabits","map","getStatusSymbol","status","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","className","Array","isArray","length","today","Date","toISOString","split","isCompleted","key","colSpan"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit || !habit.entries) return;\n\n    const entry = habit.entries.find(e => e.date === date);\n\n    console.log('Toggling habit:', habit);\n    console.log('Entry found:', entry);\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        console.log('Updated entry response:', response.data);\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        console.log('Created entry response:', response.data);\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status) => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n\n  return (\n    <div>\n      <h1>Habit Tracker</h1>\n      <button onClick={() => setIsEditMode(!isEditMode)}>\n        {isEditMode ? 'Done' : 'Edit Habits'}\n      </button>\n      {isEditMode && (\n        <form onSubmit={addHabit}>\n          <input\n            type=\"text\"\n            value={newHabit}\n            onChange={(e) => setNewHabit(e.target.value)}\n            placeholder=\"New Habit\"\n          />\n          <button type=\"submit\">Add Habit</button>\n        </form>\n      )}\n      <table className=\"habit-table\">\n        <thead>\n          <tr>\n            <th>Habit</th>\n            <th>Status</th>\n            {isEditMode && <th>Actions</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n            const today = new Date().toISOString().split('T')[0];\n            const entry = habit.entries ? habit.entries.find(e => e.date === today) : null;\n            const isCompleted = entry ? entry.completed : false;\n            return (\n              <tr key={habit.id}>\n                <td>{habit.name}</td>\n                <td>\n                  <button\n                    className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                    onClick={() => handleToggle(habit.id, today)}\n                  >\n                    {getStatusSymbol(isCompleted)}\n                  </button>\n                </td>\n                {isEditMode && (\n                  <td>\n                    <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                  </td>\n                )}\n              </tr>\n            );\n          }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}