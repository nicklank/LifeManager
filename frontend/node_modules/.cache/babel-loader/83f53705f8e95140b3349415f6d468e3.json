{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = status => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n  const handleDateChange = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n  const handleDateInputChange = e => {\n    setCurrentDate(e.target.value);\n  };\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n  const renderDefaultView = () => /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 26\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n    const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n    const isCompleted = entry ? entry.completed : false;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, getStatusSymbol(isCompleted))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: isEditMode ? \"3\" : \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 18\n    }\n  }, \"No habits found\"))));\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      value: currentDate,\n      onChange: handleDateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"habit-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Day\"), habits.map(habit => /*#__PURE__*/React.createElement(\"th\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, habit.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, daysArray.map(day => {\n      const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day);\n      const dayLetter = date.toLocaleDateString('en-US', {\n        weekday: 'short'\n      }).charAt(0);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 19\n        }\n      }, day), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }\n      }, dayLetter), habits.map(habit => {\n        const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n        const isCompleted = entry ? entry.completed : false;\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: habit.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n          onClick: () => handleToggle(habit.id, date.toISOString().split('T')[0]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }\n        }, getStatusSymbol(isCompleted)));\n      }));\n    }))));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, isEditMode ? 'Done' : 'Edit Habits'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleViewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, viewMode === 'default' ? 'Switch to Month View' : 'Switch to Default View'), isEditMode && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"New Habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Add Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: currentDate,\n    onChange: handleDateInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, \"\\u2192\")), viewMode === 'default' ? renderDefaultView() : renderMonthView());\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","currentDate","setCurrentDate","Date","toISOString","split","viewMode","setViewMode","fetchHabits","response","data","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","habitId","filter","id","handleToggle","date","find","h","entry","entries","completed","updatedHabits","map","getStatusSymbol","status","handleDateChange","days","newDate","setDate","getDate","handleDateInputChange","target","value","toggleViewMode","renderDefaultView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","isCompleted","key","onClick","colSpan","renderMonthView","daysInMonth","daysArray","from","_","i","type","onChange","day","dayLetter","toLocaleDateString","weekday","charAt","onSubmit","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status) => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n\n  const handleDateChange = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n\n  const handleDateInputChange = (e) => {\n    setCurrentDate(e.target.value);\n  };\n\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n\n  const renderDefaultView = () => (\n    <table className=\"habit-table\">\n      <thead>\n        <tr>\n          <th>Habit</th>\n          <th>Status</th>\n          {isEditMode && <th>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n          const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n          const isCompleted = entry ? entry.completed : false;\n          return (\n            <tr key={habit.id}>\n              <td>{habit.name}</td>\n              <td>\n                <button\n                  className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                  onClick={() => handleToggle(habit.id, currentDate)}\n                >\n                  {getStatusSymbol(isCompleted)}\n                </button>\n              </td>\n              {isEditMode && (\n                <td>\n                  <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                </td>\n              )}\n            </tr>\n          );\n        }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n      </tbody>\n    </table>\n  );\n\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n\n    return (\n      <div>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <table className=\"habit-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Day</th>\n              {habits.map(habit => (\n                <th key={habit.id}>{habit.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {daysArray.map(day => {\n              const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day);\n              const dayLetter = date.toLocaleDateString('en-US', { weekday: 'short' }).charAt(0);\n              return (\n                <tr key={day}>\n                  <td>{day}</td>\n                  <td>{dayLetter}</td>\n                  {habits.map(habit => {\n                    const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n                    const isCompleted = entry ? entry.completed : false;\n                    return (\n                      <td key={habit.id}>\n                        <button\n                          className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                          onClick={() => handleToggle(habit.id, date.toISOString().split('T')[0])}\n                        >\n                          {getStatusSymbol(isCompleted)}\n                        </button>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Habit Tracker</h1>\n      <button onClick={() => setIsEditMode(!isEditMode)}>\n        {isEditMode ? 'Done' : 'Edit Habits'}\n      </button>\n      <button onClick={toggleViewMode}>\n        {viewMode === 'default' ? 'Switch to Month View' : 'Switch to Default View'}\n      </button>\n      {isEditMode && (\n        <form onSubmit={addHabit}>\n          <input\n            type=\"text\"\n            value={newHabit}\n            onChange={(e) => setNewHabit(e.target.value)}\n            placeholder=\"New Habit\"\n          />\n          <button type=\"submit\">Add Habit</button>\n        </form>\n      )}\n      <div className=\"date-navigation\">\n        <button onClick={() => handleDateChange(-1)}>←</button>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <button onClick={() => handleDateChange(1)}>→</button>\n      </div>\n      {viewMode === 'default' ? renderDefaultView() : renderMonthView()}\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}