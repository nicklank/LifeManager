{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/';\n\n// Habit API calls\nexport const getHabits = async () => {\n  try {\n    const response = await axios.get(`${API_URL}habits/`);\n    console.log('Habits fetched:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching habits:', error);\n    throw error;\n  }\n};\nexport const createHabit = async habit => {\n  try {\n    const response = await axios.post(`${API_URL}habits/`, habit);\n    console.log('Habit created:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error creating habit:', error);\n    throw error;\n  }\n};\nexport const updateHabit = async (id, habit) => {\n  try {\n    const response = await axios.put(`${API_URL}habits/${id}/`, habit);\n    console.log('Habit updated:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error updating habit:', error);\n    throw error;\n  }\n};\nexport const deleteHabit = async id => {\n  try {\n    await axios.delete(`${API_URL}habits/${id}/`);\n    console.log(`Habit with ID ${id} deleted`); // Logging added\n  } catch (error) {\n    console.error('Error deleting habit:', error);\n    throw error;\n  }\n};\n\n// Habit entry API calls\nexport const getHabitEntriesByDate = async date => {\n  try {\n    const response = await axios.get(`${API_URL}habit-entries/?date=${date}`);\n    console.log(`Habit entries for date ${date} fetched:`, response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching habit entries:', error);\n    throw error;\n  }\n};\nexport const getHabitEntriesByDateRange = async (startDate, endDate) => {\n  try {\n    const response = await axios.get(`${API_URL}habit-entries/?start_date=${startDate}&end_date=${endDate}`);\n    console.log(`Habit entries from ${startDate} to ${endDate} fetched:`, response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching habit entries:', error);\n    throw error;\n  }\n};\nexport const createHabitEntry = async habitEntry => {\n  try {\n    const response = await axios.post(`${API_URL}habit-entries/`, habitEntry);\n    console.log('Habit entry created:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error creating habit entry:', error);\n    throw error;\n  }\n};\nexport const updateHabitEntry = async (id, habitEntry) => {\n  try {\n    const response = await axios.put(`${API_URL}habit-entries/${id}/`, habitEntry);\n    console.log('Habit entry updated:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error updating habit entry:', error);\n    throw error;\n  }\n};\nexport const deleteHabitEntry = async id => {\n  try {\n    await axios.delete(`${API_URL}habit-entries/${id}/`);\n    console.log(`Habit entry with ID ${id} deleted`); // Logging added\n  } catch (error) {\n    console.error('Error deleting habit entry:', error);\n    throw error;\n  }\n};\n\n// Task API calls\nexport const getTasksByDate = async date => {\n  try {\n    const response = await axios.get(`${API_URL}tasks/?date=${date}`);\n    console.log(`Tasks for date ${date} fetched:`, response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\nexport const addTask = async task => {\n  try {\n    const response = await axios.post(`${API_URL}tasks/`, task);\n    console.log('Task added:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\nexport const toggleTaskCompletion = async id => {\n  try {\n    const response = await axios.patch(`${API_URL}tasks/${id}/`, {\n      completed: true\n    });\n    console.log('Task completion toggled:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error toggling task completion:', error);\n    throw error;\n  }\n};\nexport const updateTask = async (id, task) => {\n  try {\n    const response = await axios.put(`${API_URL}tasks/${id}/`, task);\n    console.log('Task updated:', response.data); // Logging added\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\nexport const deleteTask = async id => {\n  try {\n    await axios.delete(`${API_URL}tasks/${id}/`);\n    console.log(`Task with ID ${id} deleted`); // Logging added\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\nexport default {\n  getHabits,\n  createHabit,\n  updateHabit,\n  deleteHabit,\n  getHabitEntriesByDate,\n  getHabitEntriesByDateRange,\n  createHabitEntry,\n  updateHabitEntry,\n  deleteHabitEntry,\n  getTasksByDate,\n  addTask,\n  toggleTaskCompletion,\n  updateTask,\n  deleteTask\n};","map":{"version":3,"names":["axios","API_URL","getHabits","response","get","console","log","data","error","createHabit","habit","post","updateHabit","id","put","deleteHabit","delete","getHabitEntriesByDate","date","getHabitEntriesByDateRange","startDate","endDate","createHabitEntry","habitEntry","updateHabitEntry","deleteHabitEntry","getTasksByDate","addTask","task","toggleTaskCompletion","patch","completed","updateTask","deleteTask"],"sources":["/Users/nicklankau/life-tracker/frontend/src/apiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api/';\n\n// Habit API calls\nexport const getHabits = async () => {\n    try {\n        const response = await axios.get(`${API_URL}habits/`);\n        console.log('Habits fetched:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching habits:', error);\n        throw error;\n    }\n};\n\nexport const createHabit = async (habit) => {\n    try {\n        const response = await axios.post(`${API_URL}habits/`, habit);\n        console.log('Habit created:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error creating habit:', error);\n        throw error;\n    }\n};\n\nexport const updateHabit = async (id, habit) => {\n    try {\n        const response = await axios.put(`${API_URL}habits/${id}/`, habit);\n        console.log('Habit updated:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error updating habit:', error);\n        throw error;\n    }\n};\n\nexport const deleteHabit = async (id) => {\n    try {\n        await axios.delete(`${API_URL}habits/${id}/`);\n        console.log(`Habit with ID ${id} deleted`);  // Logging added\n    } catch (error) {\n        console.error('Error deleting habit:', error);\n        throw error;\n    }\n};\n\n// Habit entry API calls\nexport const getHabitEntriesByDate = async (date) => {\n    try {\n        const response = await axios.get(`${API_URL}habit-entries/?date=${date}`);\n        console.log(`Habit entries for date ${date} fetched:`, response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching habit entries:', error);\n        throw error;\n    }\n};\n\nexport const getHabitEntriesByDateRange = async (startDate, endDate) => {\n    try {\n        const response = await axios.get(`${API_URL}habit-entries/?start_date=${startDate}&end_date=${endDate}`);\n        console.log(`Habit entries from ${startDate} to ${endDate} fetched:`, response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching habit entries:', error);\n        throw error;\n    }\n};\n\nexport const createHabitEntry = async (habitEntry) => {\n    try {\n        const response = await axios.post(`${API_URL}habit-entries/`, habitEntry);\n        console.log('Habit entry created:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error creating habit entry:', error);\n        throw error;\n    }\n};\n\nexport const updateHabitEntry = async (id, habitEntry) => {\n    try {\n        const response = await axios.put(`${API_URL}habit-entries/${id}/`, habitEntry);\n        console.log('Habit entry updated:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error updating habit entry:', error);\n        throw error;\n    }\n};\n\nexport const deleteHabitEntry = async (id) => {\n    try {\n        await axios.delete(`${API_URL}habit-entries/${id}/`);\n        console.log(`Habit entry with ID ${id} deleted`);  // Logging added\n    } catch (error) {\n        console.error('Error deleting habit entry:', error);\n        throw error;\n    }\n};\n\n// Task API calls\nexport const getTasksByDate = async (date) => {\n    try {\n        const response = await axios.get(`${API_URL}tasks/?date=${date}`);\n        console.log(`Tasks for date ${date} fetched:`, response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching tasks:', error);\n        throw error;\n    }\n};\n\nexport const addTask = async (task) => {\n    try {\n        const response = await axios.post(`${API_URL}tasks/`, task);\n        console.log('Task added:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error adding task:', error);\n        throw error;\n    }\n};\n\nexport const toggleTaskCompletion = async (id) => {\n    try {\n        const response = await axios.patch(`${API_URL}tasks/${id}/`, { completed: true });\n        console.log('Task completion toggled:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error toggling task completion:', error);\n        throw error;\n    }\n};\n\nexport const updateTask = async (id, task) => {\n    try {\n        const response = await axios.put(`${API_URL}tasks/${id}/`, task);\n        console.log('Task updated:', response.data);  // Logging added\n        return response.data;\n    } catch (error) {\n        console.error('Error updating task:', error);\n        throw error;\n    }\n};\n\nexport const deleteTask = async (id) => {\n    try {\n        await axios.delete(`${API_URL}tasks/${id}/`);\n        console.log(`Task with ID ${id} deleted`);  // Logging added\n    } catch (error) {\n        console.error('Error deleting task:', error);\n        throw error;\n    }\n};\n\nexport default {\n    getHabits,\n    createHabit,\n    updateHabit,\n    deleteHabit,\n    getHabitEntriesByDate,\n    getHabitEntriesByDateRange,\n    createHabitEntry,\n    updateHabitEntry,\n    deleteHabitEntry,\n    getTasksByDate,\n    addTask,\n    toggleTaskCompletion,\n    updateTask,\n    deleteTask\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}