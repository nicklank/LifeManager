{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async () => {\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    const entry = habit.entries.find(e => e.date === date);\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...h.entries, response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = status => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"New Habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Add Habit\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Completed Today\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, habits.map(habit => {\n    const today = new Date().toISOString().split('T')[0];\n    const entry = habit.entries.find(e => e.date === today);\n    const isCompleted = entry ? entry.completed : false;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, today),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(isCompleted))));\n  }))));\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","createHabitEntry","updateHabitEntry","HabitTracker","habits","setHabits","newHabit","setNewHabit","fetchHabits","response","data","error","console","addHabit","trim","log","habit","name","description","handleToggle","habitId","date","find","h","id","entry","entries","e","completed","updatedHabits","map","getStatusSymbol","status","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onClick","className","today","Date","toISOString","split","isCompleted","key"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async () => {\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    const entry = habit.entries.find(e => e.date === date);\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...h.entries, response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status) => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n\n  return (\n    <div>\n      <h1>Habit Tracker</h1>\n      <input\n        type=\"text\"\n        value={newHabit}\n        onChange={(e) => setNewHabit(e.target.value)}\n        placeholder=\"New Habit\"\n      />\n      <button onClick={addHabit}>Add Habit</button>\n      <table className=\"habit-table\">\n        <thead>\n          <tr>\n            <th>Habit</th>\n            <th>Completed Today</th>\n          </tr>\n        </thead>\n        <tbody>\n          {habits.map(habit => {\n            const today = new Date().toISOString().split('T')[0];\n            const entry = habit.entries.find(e => e.date === today);\n            const isCompleted = entry ? entry.completed : false;\n            return (\n              <tr key={habit.id}>\n                <td>{habit.name}</td>\n                <td>\n                  <button className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`} onClick={() => handleToggle(habit.id, today)}>\n                    {getStatusSymbol(isCompleted)}\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}