{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../apiService'; // Import your updated API service for fetching tasks\nimport './TaskView.css'; // Import the CSS for TaskView\nimport { useCalendar } from './CalendarContext'; // Use the custom hook\n\nconst TaskView = () => {\n  const {\n    selectedDate\n  } = useCalendar(); // Use the custom hook to access the selected date\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  useEffect(() => {\n    // Fetch tasks for the week containing the selected date\n    const fetchTasks = async () => {\n      const startOfWeek = new Date(selectedDate);\n      startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1); // Set to Monday\n\n      const endOfWeek = new Date(startOfWeek);\n      endOfWeek.setDate(startOfWeek.getDate() + 6); // Set to Sunday\n\n      try {\n        const response = await apiService.getTasksByDateRange(startOfWeek.toISOString().split('T')[0], endOfWeek.toISOString().split('T')[0]);\n        setTasks(response);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [selectedDate]);\n  const handleAddTask = async () => {\n    if (newTask.trim()) {\n      try {\n        const taskData = {\n          name: newTask,\n          completed: false,\n          date: selectedDate\n          // Add more fields like time start/end if needed\n        };\n        const response = await apiService.addTask(taskData);\n        setTasks([...tasks, response]);\n        setNewTask(\"\");\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  const handleToggleCompletion = async taskId => {\n    try {\n      const updatedTask = await apiService.toggleTaskCompletion(taskId);\n      setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await apiService.deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Helper function to group tasks by date\n  const groupTasksByDate = tasks => {\n    return tasks.reduce((acc, task) => {\n      (acc[task.date] = acc[task.date] || []).push(task);\n      return acc;\n    }, {});\n  };\n  const tasksByDate = groupTasksByDate(tasks);\n\n  // Generate the dates for the week\n  const generateWeekDates = () => {\n    const startOfWeek = new Date(selectedDate);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1); // Set to Monday\n\n    return Array.from({\n      length: 7\n    }, (_, i) => {\n      const date = new Date(startOfWeek);\n      date.setDate(date.getDate() + i);\n      return date.toISOString().split('T')[0];\n    });\n  };\n  const weekDates = generateWeekDates();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Tasks for the Week\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"task-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Tasks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, weekDates.map(date => {\n    var _tasksByDate$date;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"date-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, date), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"tasks-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"task-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, (_tasksByDate$date = tasksByDate[date]) === null || _tasksByDate$date === void 0 ? void 0 : _tasksByDate$date.map(task => /*#__PURE__*/React.createElement(\"li\", {\n      key: task.id,\n      className: `task-item ${task.completed ? 'completed' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => handleToggleCompletion(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 45\n      }\n    }, task.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleDeleteTask(task.id),\n      className: \"delete-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, \"\\u274C\"))))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask,\n    onChange: e => setNewTask(e.target.value),\n    placeholder: \"Enter a new task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Add Task\")));\n};\nexport default TaskView;","map":{"version":3,"names":["React","useState","useEffect","apiService","useCalendar","TaskView","selectedDate","tasks","setTasks","newTask","setNewTask","fetchTasks","startOfWeek","Date","setDate","getDate","getDay","endOfWeek","response","getTasksByDateRange","toISOString","split","error","console","handleAddTask","trim","taskData","name","completed","date","addTask","handleToggleCompletion","taskId","updatedTask","toggleTaskCompletion","map","task","id","handleDeleteTask","deleteTask","filter","groupTasksByDate","reduce","acc","push","tasksByDate","generateWeekDates","Array","from","length","_","i","weekDates","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_tasksByDate$date","key","onClick","type","value","onChange","e","target","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiService from '../apiService'; // Import your updated API service for fetching tasks\nimport './TaskView.css'; // Import the CSS for TaskView\nimport { useCalendar } from './CalendarContext'; // Use the custom hook\n\nconst TaskView = () => {\n    const { selectedDate } = useCalendar(); // Use the custom hook to access the selected date\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState(\"\");\n\n    useEffect(() => {\n        // Fetch tasks for the week containing the selected date\n        const fetchTasks = async () => {\n            const startOfWeek = new Date(selectedDate);\n            startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1); // Set to Monday\n\n            const endOfWeek = new Date(startOfWeek);\n            endOfWeek.setDate(startOfWeek.getDate() + 6); // Set to Sunday\n\n            try {\n                const response = await apiService.getTasksByDateRange(startOfWeek.toISOString().split('T')[0], endOfWeek.toISOString().split('T')[0]);\n                setTasks(response);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        fetchTasks();\n    }, [selectedDate]);\n\n    const handleAddTask = async () => {\n        if (newTask.trim()) {\n            try {\n                const taskData = {\n                    name: newTask,\n                    completed: false,\n                    date: selectedDate,\n                    // Add more fields like time start/end if needed\n                };\n                const response = await apiService.addTask(taskData);\n                setTasks([...tasks, response]);\n                setNewTask(\"\");\n            } catch (error) {\n                console.error('Error adding task:', error);\n            }\n        }\n    };\n\n    const handleToggleCompletion = async (taskId) => {\n        try {\n            const updatedTask = await apiService.toggleTaskCompletion(taskId);\n            setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n        } catch (error) {\n            console.error('Error toggling task completion:', error);\n        }\n    };\n\n    const handleDeleteTask = async (taskId) => {\n        try {\n            await apiService.deleteTask(taskId);\n            setTasks(tasks.filter(task => task.id !== taskId));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    // Helper function to group tasks by date\n    const groupTasksByDate = (tasks) => {\n        return tasks.reduce((acc, task) => {\n            (acc[task.date] = acc[task.date] || []).push(task);\n            return acc;\n        }, {});\n    };\n\n    const tasksByDate = groupTasksByDate(tasks);\n\n    // Generate the dates for the week\n    const generateWeekDates = () => {\n        const startOfWeek = new Date(selectedDate);\n        startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + 1); // Set to Monday\n\n        return Array.from({ length: 7 }, (_, i) => {\n            const date = new Date(startOfWeek);\n            date.setDate(date.getDate() + i);\n            return date.toISOString().split('T')[0];\n        });\n    };\n\n    const weekDates = generateWeekDates();\n\n    return (\n        <div className=\"task-view-container\">\n            <h2>Tasks for the Week</h2>\n            <table className=\"task-table\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Tasks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {weekDates.map(date => (\n                        <tr key={date}>\n                            <td className=\"date-column\">{date}</td>\n                            <td className=\"tasks-column\">\n                                <ul className=\"task-list\">\n                                    {tasksByDate[date]?.map(task => (\n                                        <li key={task.id} className={`task-item ${task.completed ? 'completed' : ''}`}>\n                                            <span onClick={() => handleToggleCompletion(task.id)}>\n                                                {task.name}\n                                            </span>\n                                            <button onClick={() => handleDeleteTask(task.id)} className=\"delete-task-button\">\n                                                ❌\n                                            </button>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div className=\"task-input-container\">\n                <input\n                    type=\"text\"\n                    value={newTask}\n                    onChange={(e) => setNewTask(e.target.value)}\n                    placeholder=\"Enter a new task...\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}