{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js\";\nimport React, { useState } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = () => {\n  const [tasks, setTasks] = useState({\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: [],\n    Sunday: []\n  });\n  const handleAddTask = day => {\n    const task = prompt('Enter task:');\n    if (task) {\n      setTasks({\n        ...tasks,\n        [day]: [...tasks[day], {\n          task,\n          completed: false\n        }]\n      });\n    }\n  };\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? {\n      ...t,\n      completed: !t.completed\n    } : t);\n    setTasks({\n      ...tasks,\n      [day]: newTasks\n    });\n  };\n  const renderTasks = day => tasks[day].map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: task.completed ? 'completed-task' : '',\n    onClick: () => handleToggleTask(day, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, task.task));\n  const daysOfWeek = [{\n    full: 'Monday',\n    short: 'M'\n  }, {\n    full: 'Tuesday',\n    short: 'T'\n  }, {\n    full: 'Wednesday',\n    short: 'W'\n  }, {\n    full: 'Thursday',\n    short: 'T'\n  }, {\n    full: 'Friday',\n    short: 'F'\n  }, {\n    full: 'Saturday',\n    short: 'S'\n  }, {\n    full: 'Sunday',\n    short: 'S'\n  }];\n  const getDate = dayIndex => {\n    const today = new Date();\n    const firstDayOfWeek = today.getDate() - today.getDay() + 1; // Calculate Monday's date\n    const date = new Date(today.setDate(firstDayOfWeek + dayIndex - 1));\n    return date.getDate();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"week-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, daysOfWeek.map((day, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: day.full,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"day-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, day.short, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 53\n    }\n  }), getDate(index)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, renderTasks(day.full)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAddTask(day.full),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Add Task\")))))));\n};\nexport default WeekView;","map":{"version":3,"names":["React","useState","WeekView","tasks","setTasks","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","handleAddTask","day","task","prompt","completed","handleToggleTask","index","newTasks","map","t","i","renderTasks","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","daysOfWeek","full","short","getDate","dayIndex","today","Date","firstDayOfWeek","getDay","date","setDate"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = () => {\n  const [tasks, setTasks] = useState({\n    Monday: [], Tuesday: [], Wednesday: [], Thursday: [], Friday: [], Saturday: [], Sunday: []\n  });\n\n  const handleAddTask = (day) => {\n    const task = prompt('Enter task:');\n    if (task) {\n      setTasks({ ...tasks, [day]: [...tasks[day], { task, completed: false }] });\n    }\n  };\n\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? { ...t, completed: !t.completed } : t);\n    setTasks({ ...tasks, [day]: newTasks });\n  };\n\n  const renderTasks = (day) => (\n    tasks[day].map((task, index) => (\n      <li key={index} className={task.completed ? 'completed-task' : ''} onClick={() => handleToggleTask(day, index)}>\n        {task.task}\n      </li>\n    ))\n  );\n\n  const daysOfWeek = [\n    { full: 'Monday', short: 'M' },\n    { full: 'Tuesday', short: 'T' },\n    { full: 'Wednesday', short: 'W' },\n    { full: 'Thursday', short: 'T' },\n    { full: 'Friday', short: 'F' },\n    { full: 'Saturday', short: 'S' },\n    { full: 'Sunday', short: 'S' }\n  ];\n\n  const getDate = (dayIndex) => {\n    const today = new Date();\n    const firstDayOfWeek = today.getDate() - today.getDay() + 1; // Calculate Monday's date\n    const date = new Date(today.setDate(firstDayOfWeek + dayIndex - 1));\n    return date.getDate();\n  };\n\n  return (\n    <div className=\"week-view\">\n      <table className=\"week-table\">\n        <tbody>\n          {daysOfWeek.map((day, index) => (\n            <tr key={day.full}>\n              <td className=\"day-column\">{day.short}<br />{getDate(index)}</td>\n              <td>\n                <ul>\n                  {renderTasks(day.full)}\n                </ul>\n                <button onClick={() => handleAddTask(day.full)}>Add Task</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeekView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}