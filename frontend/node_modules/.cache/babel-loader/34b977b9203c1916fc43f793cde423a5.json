{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js\";\nimport React, { useState } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = () => {\n  const [tasks, setTasks] = useState({\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: [],\n    Sunday: []\n  });\n  const handleAddTask = day => {\n    const task = prompt('Enter task:');\n    if (task) {\n      setTasks({\n        ...tasks,\n        [day]: [...tasks[day], {\n          task,\n          completed: false\n        }]\n      });\n    }\n  };\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? {\n      ...t,\n      completed: !t.completed\n    } : t);\n    setTasks({\n      ...tasks,\n      [day]: newTasks\n    });\n  };\n  const renderTasks = day => tasks[day].map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: task.completed ? 'completed-task' : '',\n    onClick: () => handleToggleTask(day, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, task.task));\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"week-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, daysOfWeek.map(day => /*#__PURE__*/React.createElement(\"th\", {\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, day)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, daysOfWeek.map(day => /*#__PURE__*/React.createElement(\"td\", {\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, renderTasks(day)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAddTask(day),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Add Task\")))))));\n};\nexport default WeekView;","map":{"version":3,"names":["React","useState","WeekView","tasks","setTasks","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","handleAddTask","day","task","prompt","completed","handleToggleTask","index","newTasks","map","t","i","renderTasks","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","daysOfWeek"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = () => {\n  const [tasks, setTasks] = useState({\n    Monday: [], Tuesday: [], Wednesday: [], Thursday: [], Friday: [], Saturday: [], Sunday: []\n  });\n\n  const handleAddTask = (day) => {\n    const task = prompt('Enter task:');\n    if (task) {\n      setTasks({ ...tasks, [day]: [...tasks[day], { task, completed: false }] });\n    }\n  };\n\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? { ...t, completed: !t.completed } : t);\n    setTasks({ ...tasks, [day]: newTasks });\n  };\n\n  const renderTasks = (day) => (\n    tasks[day].map((task, index) => (\n      <li key={index} className={task.completed ? 'completed-task' : ''} onClick={() => handleToggleTask(day, index)}>\n        {task.task}\n      </li>\n    ))\n  );\n\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n  return (\n    <div className=\"week-view\">\n      <table className=\"week-table\">\n        <thead>\n          <tr>\n            {daysOfWeek.map(day => (\n              <th key={day}>{day}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {daysOfWeek.map(day => (\n              <td key={day}>\n                <ul>\n                  {renderTasks(day)}\n                </ul>\n                <button onClick={() => handleAddTask(day)}>Add Task</button>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeekView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}