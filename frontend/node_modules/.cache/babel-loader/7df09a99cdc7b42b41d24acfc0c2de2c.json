{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\nimport './TaskView.css'; // Import TaskView styles\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({\n    habitId: null,\n    date: null\n  });\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = (status, customValue) => {\n    return status ? customValue || '✔️' : ''; // Checkmark if no custom value\n  };\n  const handleDateChange = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n  const handleDateInputChange = e => {\n    setCurrentDate(e.target.value);\n  };\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({\n      habitId,\n      date\n    });\n  };\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = {\n        ...entry,\n        customValue: value,\n        completed: true\n      };\n      updateHabitEntry(entry.id, updatedEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = {\n        habit: habitId,\n        date,\n        customValue: value,\n        completed: true\n      };\n      createHabitEntry(newEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n  const renderDefaultView = () => /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 26\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, habits.length > 0 ? habits.map(habit => {\n    const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n    const isCompleted = entry ? entry.completed : false;\n    const customValue = entry ? entry.customValue : '';\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      onDoubleClick: () => handleDoubleClick(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, editStatus.habitId === habit.id && editStatus.date === currentDate ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: customValue,\n      onChange: e => handleInputChange(e, habit.id, currentDate),\n      maxLength: \"1\",\n      autoFocus: true,\n      className: \"small-input\" // Add a class for styling\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(isCompleted, customValue))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: isEditMode ? \"3\" : \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 18\n    }\n  }, \"No habits found\"))));\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      value: currentDate,\n      onChange: handleDateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"habit-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Day\"), habits.map(habit => /*#__PURE__*/React.createElement(\"th\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, habit.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, daysArray.map(day => {\n      const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day).toISOString().split('T')[0];\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, new Date(date).toLocaleDateString('en-US', {\n        weekday: 'short'\n      })), habits.map(habit => {\n        const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n        const isCompleted = entry ? entry.completed : false;\n        const customValue = entry ? entry.customValue : '';\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: habit.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n          onClick: () => handleToggle(habit.id, date),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }\n        }, getStatusSymbol(isCompleted, customValue)));\n      }));\n    }))));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"habit-tracker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(-7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, \"Previous Week\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, \"Next Week\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleViewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, \"Toggle View Mode\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, isEditMode ? 'View Mode' : 'Edit Mode')), viewMode === 'default' ? renderDefaultView() : renderMonthView(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"Add new habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Add Habit\"))), /*#__PURE__*/React.createElement(TaskView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }), \" \");\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","currentDate","setCurrentDate","Date","toISOString","split","viewMode","setViewMode","editStatus","setEditStatus","habitId","date","fetchHabits","response","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","filter","id","handleToggle","find","h","entry","entries","completed","updatedHabits","map","getStatusSymbol","status","customValue","handleDateChange","days","newDate","setDate","getDate","handleDateInputChange","target","value","toggleViewMode","handleDoubleClick","handleInputChange","charAt","updatedEntry","then","catch","newEntry","renderDefaultView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","isCompleted","key","onDoubleClick","type","onChange","maxLength","autoFocus","onClick","colSpan","renderMonthView","daysInMonth","daysArray","Array","from","_","i","day","toLocaleDateString","weekday","onSubmit","placeholder","TaskView"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\nimport './TaskView.css'; // Import TaskView styles\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({ habitId: null, date: null });\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status, customValue) => {\n    return status ? customValue || '✔️' : ''; // Checkmark if no custom value\n  };\n\n  const handleDateChange = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n\n  const handleDateInputChange = (e) => {\n    setCurrentDate(e.target.value);\n  };\n\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({ habitId, date });\n  };\n\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = { ...entry, customValue: value, completed: true };\n      updateHabitEntry(entry.id, updatedEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: h.entries.map(e => e.id === entry.id ? response : e) };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = { habit: habitId, date, customValue: value, completed: true };\n      createHabitEntry(newEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: [...(h.entries || []), response] };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n\n  const renderDefaultView = () => (\n    <table className=\"habit-table\">\n      <thead>\n        <tr>\n          <th>Habit</th>\n          <th>Status</th>\n          {isEditMode && <th>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {habits.length > 0 ? habits.map(habit => {\n          const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n          const isCompleted = entry ? entry.completed : false;\n          const customValue = entry ? entry.customValue : '';\n          return (\n            <tr key={habit.id}>\n              <td>{habit.name}</td>\n              <td onDoubleClick={() => handleDoubleClick(habit.id, currentDate)}>\n                {editStatus.habitId === habit.id && editStatus.date === currentDate ? (\n                  <input\n                    type=\"text\"\n                    value={customValue}\n                    onChange={(e) => handleInputChange(e, habit.id, currentDate)}\n                    maxLength=\"1\"\n                    autoFocus\n                    className=\"small-input\" // Add a class for styling\n                  />\n                ) : (\n                  <button\n                    className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                    onClick={() => handleToggle(habit.id, currentDate)}\n                  >\n                    {getStatusSymbol(isCompleted, customValue)}\n                  </button>\n                )}\n              </td>\n              {isEditMode && (\n                <td>\n                  <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                </td>\n              )}\n            </tr>\n          );\n        }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n      </tbody>\n    </table>\n  );\n\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n\n    return (\n      <div>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <table className=\"habit-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Day</th>\n              {habits.map(habit => (\n                <th key={habit.id}>{habit.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {daysArray.map(day => {\n              const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day).toISOString().split('T')[0];\n              return (\n                <tr key={day}>\n                  <td>{date}</td>\n                  <td>{new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}</td>\n                  {habits.map(habit => {\n                    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n                    const isCompleted = entry ? entry.completed : false;\n                    const customValue = entry ? entry.customValue : '';\n                    return (\n                      <td key={habit.id}>\n                        <button\n                          className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                          onClick={() => handleToggle(habit.id, date)}\n                        >\n                          {getStatusSymbol(isCompleted, customValue)}\n                        </button>\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"habit-tracker\">\n      <div className=\"view-controls\">\n        <button onClick={() => handleDateChange(-7)}>Previous Week</button>\n        <button onClick={() => handleDateChange(7)}>Next Week</button>\n        <button onClick={toggleViewMode}>Toggle View Mode</button>\n        <button onClick={() => setIsEditMode(!isEditMode)}>\n          {isEditMode ? 'View Mode' : 'Edit Mode'}\n        </button>\n      </div>\n      {viewMode === 'default' ? renderDefaultView() : renderMonthView()}\n      <div className=\"add-habit\">\n        <form onSubmit={addHabit}>\n          <input\n            type=\"text\"\n            value={newHabit}\n            onChange={(e) => setNewHabit(e.target.value)}\n            placeholder=\"Add new habit\"\n          />\n          <button type=\"submit\">Add Habit</button>\n        </form>\n      </div>\n      <TaskView /> {/* Render the TaskView component */}\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}