{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getTasks, createTask } from '../apiService'; // Ensure these functions handle tasks correctly\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = ({\n  currentDate\n}) => {\n  const [tasks, setTasks] = useState({});\n  const [newTask, setNewTask] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n\n  // Calculate the start of the current week based on currentDate\n  const startOfWeek = new Date(currentDate);\n  startOfWeek.setDate(startOfWeek.getDate() - (startOfWeek.getDay() + 6) % 7); // Monday as the first day of the week\n\n  // Get the date for a specific day index (0 = Monday, 6 = Sunday)\n  const getDateForDay = dayIndex => {\n    const date = new Date(startOfWeek);\n    date.setDate(startOfWeek.getDate() + dayIndex);\n    return date.toISOString().split('T')[0]; // Return the full date in ISO format\n  };\n\n  // Fetch tasks for the selected week\n  useEffect(() => {\n    if (selectedDate) {\n      const fetchTasks = async () => {\n        try {\n          const response = await getTasks(getDateForDay(0), getDateForDay(6));\n          if (response.data) {\n            const fetchedTasks = response.data.reduce((acc, task) => {\n              const taskDate = new Date(task.date).toISOString().split('T')[0];\n              if (!acc[taskDate]) acc[taskDate] = [];\n              acc[taskDate].push({\n                task: task.name,\n                completed: task.completed\n              });\n              return acc;\n            }, {});\n            setTasks(fetchedTasks);\n          }\n        } catch (error) {\n          console.error('Error fetching tasks:', error);\n        }\n      };\n      fetchTasks();\n    }\n  }, [selectedDate]);\n\n  // Handle adding a new task\n  const handleAddTask = async date => {\n    if (newTask) {\n      try {\n        const response = await createTask({\n          name: newTask,\n          completed: false,\n          date: date\n        });\n        if (response.status === 201) {\n          setTasks({\n            ...tasks,\n            [date]: [...(tasks[date] || []), {\n              task: newTask,\n              completed: false\n            }]\n          });\n          setNewTask('');\n        } else {\n          console.error('Failed to add task:', response);\n        }\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n\n  // Handle Enter key press\n  const handleInputKeyPress = (event, date) => {\n    if (event.key === 'Enter') {\n      handleAddTask(date);\n    }\n  };\n  const daysOfWeek = Array.from({\n    length: 7\n  }, (_, i) => {\n    const date = getDateForDay(i);\n    return {\n      dayName: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][i],\n      date\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"week-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Tasks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, daysOfWeek.map(({\n    dayName,\n    date\n  }) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, dayName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, (tasks[date] || []).map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: task.completed ? 'completed-task' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, task.task))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask,\n    onChange: handleInputChange,\n    onKeyPress: event => handleInputKeyPress(event, date),\n    placeholder: \"New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default WeekView;","map":{"version":3,"names":["React","useState","useEffect","axios","getTasks","createTask","WeekView","currentDate","tasks","setTasks","newTask","setNewTask","selectedDate","setSelectedDate","startOfWeek","Date","setDate","getDate","getDay","getDateForDay","dayIndex","date","toISOString","split","fetchTasks","response","data","fetchedTasks","reduce","acc","task","taskDate","push","name","completed","error","console","handleAddTask","status","handleInputChange","event","target","value","handleInputKeyPress","key","daysOfWeek","Array","from","length","_","i","dayName","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","onChange","onKeyPress","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getTasks, createTask } from '../apiService'; // Ensure these functions handle tasks correctly\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = ({ currentDate }) => {\n  const [tasks, setTasks] = useState({});\n  const [newTask, setNewTask] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n\n  // Calculate the start of the current week based on currentDate\n  const startOfWeek = new Date(currentDate);\n  startOfWeek.setDate(startOfWeek.getDate() - (startOfWeek.getDay() + 6) % 7); // Monday as the first day of the week\n\n  // Get the date for a specific day index (0 = Monday, 6 = Sunday)\n  const getDateForDay = (dayIndex) => {\n    const date = new Date(startOfWeek);\n    date.setDate(startOfWeek.getDate() + dayIndex);\n    return date.toISOString().split('T')[0]; // Return the full date in ISO format\n  };\n\n  // Fetch tasks for the selected week\n  useEffect(() => {\n    if (selectedDate) {\n      const fetchTasks = async () => {\n        try {\n          const response = await getTasks(getDateForDay(0), getDateForDay(6));\n          if (response.data) {\n            const fetchedTasks = response.data.reduce((acc, task) => {\n              const taskDate = new Date(task.date).toISOString().split('T')[0];\n              if (!acc[taskDate]) acc[taskDate] = [];\n              acc[taskDate].push({ task: task.name, completed: task.completed });\n              return acc;\n            }, {});\n            setTasks(fetchedTasks);\n          }\n        } catch (error) {\n          console.error('Error fetching tasks:', error);\n        }\n      };\n      fetchTasks();\n    }\n  }, [selectedDate]);\n\n  // Handle adding a new task\n  const handleAddTask = async (date) => {\n    if (newTask) {\n      try {\n        const response = await createTask({\n          name: newTask,\n          completed: false,\n          date: date,\n        });\n        if (response.status === 201) {\n          setTasks({\n            ...tasks,\n            [date]: [...(tasks[date] || []), { task: newTask, completed: false }],\n          });\n          setNewTask('');\n        } else {\n          console.error('Failed to add task:', response);\n        }\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  // Handle Enter key press\n  const handleInputKeyPress = (event, date) => {\n    if (event.key === 'Enter') {\n      handleAddTask(date);\n    }\n  };\n\n  const daysOfWeek = Array.from({ length: 7 }, (_, i) => {\n    const date = getDateForDay(i);\n    return {\n      dayName: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][i],\n      date,\n    };\n  });\n\n  return (\n    <div className=\"week-view\">\n      <table className=\"week-table\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Tasks</th>\n          </tr>\n        </thead>\n        <tbody>\n          {daysOfWeek.map(({ dayName, date }) => (\n            <tr key={date}>\n              <td>\n                {dayName}\n                <br />\n                {date}\n              </td>\n              <td>\n                <ul>\n                  {(tasks[date] || []).map((task, index) => (\n                    <li key={index} className={task.completed ? 'completed-task' : ''}>\n                      {task.task}\n                    </li>\n                  ))}\n                </ul>\n                <input\n                  type=\"text\"\n                  value={newTask}\n                  onChange={handleInputChange}\n                  onKeyPress={(event) => handleInputKeyPress(event, date)}\n                  placeholder=\"New Task\"\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeekView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}