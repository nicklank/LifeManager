{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/CalendarContext.js\";\nimport React, { createContext, useState, useContext } from 'react';\n\n// Function to get today's date in MST\nconst getTodayDateInMST = () => {\n  const date = new Date();\n  const utcOffset = date.getTimezoneOffset(); // Get the current UTC offset in minutes\n  const mstOffset = -420; // MST is UTC-7, so -420 minutes\n  const offset = utcOffset - mstOffset; // Calculate the offset difference\n  date.setMinutes(date.getMinutes() + offset); // Adjust date to MST\n  return date.toISOString().split('T')[0]; // Return as 'YYYY-MM-DD' string\n};\n\n// Create a Context for the calendar\nconst CalendarContext = createContext();\nexport const CalendarProvider = ({\n  children\n}) => {\n  const [selectedDate, setSelectedDate] = useState(getTodayDateInMST()); // Default to today in MST\n\n  // Function to get the start and end of the week based on the current date\n  const getWeekDateRange = () => {\n    const startOfWeek = new Date(selectedDate);\n    const dayOfWeek = startOfWeek.getDay(); // Get the current day of the week (0 for Sunday, 1 for Monday, etc.)\n    const daysToMonday = (dayOfWeek + 6) % 7; // Calculate days to previous Monday\n    startOfWeek.setDate(startOfWeek.getDate() - daysToMonday); // Adjust to Monday\n\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6); // Set to Sunday (end of the week)\n\n    return {\n      start: startOfWeek.toISOString().split('T')[0],\n      // Format start date\n      end: endOfWeek.toISOString().split('T')[0] // Format end date\n    };\n  };\n\n  // Function to handle date change by a specific number of days\n  const changeDate = days => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(newDate.getDate() + days); // Adjust date by 'days'\n    setSelectedDate(newDate.toISOString().split('T')[0]); // Update selectedDate\n  };\n\n  // Expose selectedDate and helper functions via context\n  return /*#__PURE__*/React.createElement(CalendarContext.Provider, {\n    value: {\n      selectedDate,\n      getWeekDateRange,\n      changeDate,\n      setSelectedDate\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n// Custom hook for using the calendar context\nexport const useCalendar = () => useContext(CalendarContext);","map":{"version":3,"names":["React","createContext","useState","useContext","getTodayDateInMST","date","Date","utcOffset","getTimezoneOffset","mstOffset","offset","setMinutes","getMinutes","toISOString","split","CalendarContext","CalendarProvider","children","selectedDate","setSelectedDate","getWeekDateRange","startOfWeek","dayOfWeek","getDay","daysToMonday","setDate","getDate","endOfWeek","start","end","changeDate","days","newDate","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useCalendar"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/CalendarContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Function to get today's date in MST\nconst getTodayDateInMST = () => {\n  const date = new Date();\n  const utcOffset = date.getTimezoneOffset(); // Get the current UTC offset in minutes\n  const mstOffset = -420; // MST is UTC-7, so -420 minutes\n  const offset = utcOffset - mstOffset; // Calculate the offset difference\n  date.setMinutes(date.getMinutes() + offset); // Adjust date to MST\n  return date.toISOString().split('T')[0]; // Return as 'YYYY-MM-DD' string\n};\n\n// Create a Context for the calendar\nconst CalendarContext = createContext();\n\nexport const CalendarProvider = ({ children }) => {\n  const [selectedDate, setSelectedDate] = useState(getTodayDateInMST()); // Default to today in MST\n\n  // Function to get the start and end of the week based on the current date\n  const getWeekDateRange = () => {\n    const startOfWeek = new Date(selectedDate);\n    const dayOfWeek = startOfWeek.getDay(); // Get the current day of the week (0 for Sunday, 1 for Monday, etc.)\n    const daysToMonday = (dayOfWeek + 6) % 7; // Calculate days to previous Monday\n    startOfWeek.setDate(startOfWeek.getDate() - daysToMonday); // Adjust to Monday\n\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6); // Set to Sunday (end of the week)\n\n    return {\n      start: startOfWeek.toISOString().split('T')[0], // Format start date\n      end: endOfWeek.toISOString().split('T')[0], // Format end date\n    };\n  };\n\n  // Function to handle date change by a specific number of days\n  const changeDate = (days) => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(newDate.getDate() + days); // Adjust date by 'days'\n    setSelectedDate(newDate.toISOString().split('T')[0]); // Update selectedDate\n  };\n\n  // Expose selectedDate and helper functions via context\n  return (\n    <CalendarContext.Provider value={{ selectedDate, getWeekDateRange, changeDate, setSelectedDate }}>\n      {children}\n    </CalendarContext.Provider>\n  );\n};\n\n// Custom hook for using the calendar context\nexport const useCalendar = () => useContext(CalendarContext);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,MAAMC,SAAS,GAAGF,IAAI,CAACG,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAMC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;EACxB,MAAMC,MAAM,GAAGH,SAAS,GAAGE,SAAS,CAAC,CAAC;EACtCJ,IAAI,CAACM,UAAU,CAACN,IAAI,CAACO,UAAU,CAAC,CAAC,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC7C,OAAOL,IAAI,CAACQ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC;;AAED;AACA,MAAMC,eAAe,GAAGd,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMe,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAACE,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvE;EACA,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAG,IAAIf,IAAI,CAACY,YAAY,CAAC;IAC1C,MAAMI,SAAS,GAAGD,WAAW,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;IACxC,MAAMC,YAAY,GAAG,CAACF,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1CD,WAAW,CAACI,OAAO,CAACJ,WAAW,CAACK,OAAO,CAAC,CAAC,GAAGF,YAAY,CAAC,CAAC,CAAC;;IAE3D,MAAMG,SAAS,GAAG,IAAIrB,IAAI,CAACe,WAAW,CAAC;IACvCM,SAAS,CAACF,OAAO,CAACE,SAAS,CAACD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE5C,OAAO;MACLE,KAAK,EAAEP,WAAW,CAACR,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAE;MAChDe,GAAG,EAAEF,SAAS,CAACd,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;IAC9C,CAAC;EACH,CAAC;;EAED;EACA,MAAMgB,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,OAAO,GAAG,IAAI1B,IAAI,CAACY,YAAY,CAAC;IACtCc,OAAO,CAACP,OAAO,CAACO,OAAO,CAACN,OAAO,CAAC,CAAC,GAAGK,IAAI,CAAC,CAAC,CAAC;IAC3CZ,eAAe,CAACa,OAAO,CAACnB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,oBACEd,KAAA,CAAAiC,aAAA,CAAClB,eAAe,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,YAAY;MAAEE,gBAAgB;MAAEU,UAAU;MAAEX;IAAgB,CAAE;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9FxB,QACuB,CAAC;AAE/B,CAAC;;AAED;AACA,OAAO,MAAMyB,WAAW,GAAGA,CAAA,KAAMvC,UAAU,CAACY,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}