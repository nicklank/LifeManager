{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js\";\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../apiService'; // Import your updated API service for fetching tasks\nimport './TaskView.css'; // Import the CSS for TaskView\nimport { useCalendar } from './CalendarContext'; // Use the custom hook\n\nconst TaskView = () => {\n  const {\n    selectedDate\n  } = useCalendar(); // Use the custom hook to access the selected date\n  const [tasks, setTasks] = useState([]);\n  const [taskInput, setTaskInput] = useState({});\n\n  // Function to calculate the start and end date of the week for the selected date\n  const getWeekDateRange = date => {\n    const startDate = new Date(date);\n    const endDate = new Date(date);\n    const day = startDate.getDay();\n    startDate.setDate(startDate.getDate() - day + (day === 0 ? -6 : 1)); // Set to Monday\n    endDate.setDate(startDate.getDate() + 6); // Set to Sunday\n    return {\n      startDate: startDate.toISOString().split('T')[0],\n      endDate: endDate.toISOString().split('T')[0]\n    };\n  };\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        startDate,\n        endDate\n      } = getWeekDateRange(selectedDate);\n      try {\n        const response = await apiService.getTasksByDateRange(startDate, endDate);\n        setTasks(response);\n        // Initialize task inputs for each day\n        const taskInputs = {};\n        for (let i = 0; i < 7; i++) {\n          const date = new Date(startDate);\n          date.setDate(date.getDate() + i);\n          taskInputs[date.toISOString().split('T')[0]] = '';\n        }\n        setTaskInput(taskInputs);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [selectedDate]);\n  const handleAddTask = async date => {\n    const taskName = taskInput[date];\n    if (taskName.trim()) {\n      try {\n        const taskData = {\n          name: taskName,\n          completed: false,\n          date: date\n        };\n        const response = await apiService.addTask(taskData);\n        setTasks([...tasks, response]);\n        setTaskInput({\n          ...taskInput,\n          [date]: ''\n        });\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  const handleToggleCompletion = async taskId => {\n    try {\n      const updatedTask = await apiService.toggleTaskCompletion(taskId);\n      setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await apiService.deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const {\n    startDate,\n    endDate\n  } = getWeekDateRange(selectedDate);\n  const daysOfWeek = Array.from({\n    length: 7\n  }, (_, i) => {\n    const date = new Date(startDate);\n    date.setDate(date.getDate() + i);\n    return date.toISOString().split('T')[0];\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Tasks for the week of \", startDate), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Tasks\")), daysOfWeek.map(date => /*#__PURE__*/React.createElement(\"div\", {\n    key: date,\n    className: \"task-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell date-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, date), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell tasks-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, tasks.filter(task => task.date === date).map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleToggleCompletion(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteTask(task.id),\n    className: \"delete-task-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }, \"\\u274C\")))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: taskInput[date],\n    onChange: e => setTaskInput({\n      ...taskInput,\n      [date]: e.target.value\n    }),\n    placeholder: \"Enter a new task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAddTask(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"Add Task\"))))));\n};\nexport default TaskView;","map":{"version":3,"names":["React","useState","useEffect","apiService","useCalendar","TaskView","selectedDate","tasks","setTasks","taskInput","setTaskInput","getWeekDateRange","date","startDate","Date","endDate","day","getDay","setDate","getDate","toISOString","split","fetchTasks","response","getTasksByDateRange","taskInputs","i","error","console","handleAddTask","taskName","trim","taskData","name","completed","addTask","handleToggleCompletion","taskId","updatedTask","toggleTaskCompletion","map","task","id","handleDeleteTask","deleteTask","filter","daysOfWeek","Array","from","length","_","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","onClick","type","value","onChange","e","target","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiService from '../apiService'; // Import your updated API service for fetching tasks\nimport './TaskView.css'; // Import the CSS for TaskView\nimport { useCalendar } from './CalendarContext'; // Use the custom hook\n\nconst TaskView = () => {\n    const { selectedDate } = useCalendar(); // Use the custom hook to access the selected date\n    const [tasks, setTasks] = useState([]);\n    const [taskInput, setTaskInput] = useState({});\n\n    // Function to calculate the start and end date of the week for the selected date\n    const getWeekDateRange = (date) => {\n        const startDate = new Date(date);\n        const endDate = new Date(date);\n        const day = startDate.getDay();\n        startDate.setDate(startDate.getDate() - day + (day === 0 ? -6 : 1)); // Set to Monday\n        endDate.setDate(startDate.getDate() + 6); // Set to Sunday\n        return { startDate: startDate.toISOString().split('T')[0], endDate: endDate.toISOString().split('T')[0] };\n    };\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            const { startDate, endDate } = getWeekDateRange(selectedDate);\n            try {\n                const response = await apiService.getTasksByDateRange(startDate, endDate);\n                setTasks(response);\n                // Initialize task inputs for each day\n                const taskInputs = {};\n                for (let i = 0; i < 7; i++) {\n                    const date = new Date(startDate);\n                    date.setDate(date.getDate() + i);\n                    taskInputs[date.toISOString().split('T')[0]] = '';\n                }\n                setTaskInput(taskInputs);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        fetchTasks();\n    }, [selectedDate]);\n\n    const handleAddTask = async (date) => {\n        const taskName = taskInput[date];\n        if (taskName.trim()) {\n            try {\n                const taskData = {\n                    name: taskName,\n                    completed: false,\n                    date: date\n                };\n                const response = await apiService.addTask(taskData);\n                setTasks([...tasks, response]);\n                setTaskInput({ ...taskInput, [date]: '' });\n            } catch (error) {\n                console.error('Error adding task:', error);\n            }\n        }\n    };\n\n    const handleToggleCompletion = async (taskId) => {\n        try {\n            const updatedTask = await apiService.toggleTaskCompletion(taskId);\n            setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n        } catch (error) {\n            console.error('Error toggling task completion:', error);\n        }\n    };\n\n    const handleDeleteTask = async (taskId) => {\n        try {\n            await apiService.deleteTask(taskId);\n            setTasks(tasks.filter(task => task.id !== taskId));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    const { startDate, endDate } = getWeekDateRange(selectedDate);\n    const daysOfWeek = Array.from({ length: 7 }, (_, i) => {\n        const date = new Date(startDate);\n        date.setDate(date.getDate() + i);\n        return date.toISOString().split('T')[0];\n    });\n\n    return (\n        <div className=\"task-view-container\">\n            <h2>Tasks for the week of {startDate}</h2>\n            <div className=\"task-table\">\n                <div className=\"task-table-header\">\n                    <div className=\"task-table-cell\">Date</div>\n                    <div className=\"task-table-cell\">Tasks</div>\n                </div>\n                {daysOfWeek.map(date => (\n                    <div key={date} className=\"task-table-row\">\n                        <div className=\"task-table-cell date-cell\">{date}</div>\n                        <div className=\"task-table-cell tasks-cell\">\n                            <ul>\n                                {tasks.filter(task => task.date === date).map(task => (\n                                    <li key={task.id} className={`task-item ${task.completed ? 'completed' : ''}`}>\n                                        <span onClick={() => handleToggleCompletion(task.id)}>\n                                            {task.name}\n                                        </span>\n                                        <button onClick={() => handleDeleteTask(task.id)} className=\"delete-task-button\">\n                                            ❌\n                                        </button>\n                                    </li>\n                                ))}\n                            </ul>\n                            <input\n                                type=\"text\"\n                                value={taskInput[date]}\n                                onChange={(e) => setTaskInput({ ...taskInput, [date]: e.target.value })}\n                                placeholder=\"Enter a new task...\"\n                            />\n                            <button onClick={() => handleAddTask(date)}>Add Task</button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default TaskView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}