{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport apiService from '../apiService'; // Import your updated API service for fetching tasks\nimport './TaskView.css'; // Import the CSS for TaskView\nimport CalendarContext from './CalendarContext'; // Correctly import CalendarContext\n\nconst TaskView = () => {\n  const {\n    selectedDate\n  } = useContext(CalendarContext); // Access the selected date from the central calendar\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await apiService.getTasksByDate(selectedDate);\n        if (Array.isArray(response)) {\n          setTasks(response);\n        } else {\n          console.error('Unexpected response format:', response);\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [selectedDate]); // Ensure this runs when selectedDate changes\n\n  const handleAddTask = async () => {\n    if (newTask.trim()) {\n      try {\n        const taskData = {\n          name: newTask,\n          completed: false,\n          date: selectedDate\n        };\n        const response = await apiService.addTask(taskData);\n        setTasks(prevTasks => [...prevTasks, response]);\n        setNewTask(\"\");\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  const handleToggleCompletion = async taskId => {\n    try {\n      const updatedTask = await apiService.toggleTaskCompletion(taskId);\n      setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Tasks for \", selectedDate), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleToggleCompletion(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, task.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask,\n    onChange: e => setNewTask(e.target.value),\n    placeholder: \"Enter a new task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Add Task\")));\n};\nexport default TaskView;","map":{"version":3,"names":["React","useState","useEffect","useContext","apiService","CalendarContext","TaskView","selectedDate","tasks","setTasks","newTask","setNewTask","fetchTasks","response","getTasksByDate","Array","isArray","console","error","handleAddTask","trim","taskData","name","completed","date","addTask","prevTasks","handleToggleCompletion","taskId","updatedTask","toggleTaskCompletion","map","task","id","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","onClick","type","value","onChange","e","target","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport apiService from '../apiService'; // Import your updated API service for fetching tasks\nimport './TaskView.css'; // Import the CSS for TaskView\nimport CalendarContext from './CalendarContext'; // Correctly import CalendarContext\n\nconst TaskView = () => {\n    const { selectedDate } = useContext(CalendarContext); // Access the selected date from the central calendar\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState(\"\");\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await apiService.getTasksByDate(selectedDate);\n                if (Array.isArray(response)) {\n                    setTasks(response);\n                } else {\n                    console.error('Unexpected response format:', response);\n                }\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        fetchTasks();\n    }, [selectedDate]); // Ensure this runs when selectedDate changes\n\n    const handleAddTask = async () => {\n        if (newTask.trim()) {\n            try {\n                const taskData = {\n                    name: newTask,\n                    completed: false,\n                    date: selectedDate,\n                };\n                const response = await apiService.addTask(taskData);\n                setTasks(prevTasks => [...prevTasks, response]);\n                setNewTask(\"\");\n            } catch (error) {\n                console.error('Error adding task:', error);\n            }\n        }\n    };\n\n    const handleToggleCompletion = async (taskId) => {\n        try {\n            const updatedTask = await apiService.toggleTaskCompletion(taskId);\n            setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n        } catch (error) {\n            console.error('Error toggling task completion:', error);\n        }\n    };\n\n    return (\n        <div className=\"task-view-container\">\n            <h2>Tasks for {selectedDate}</h2>\n            <ul className=\"task-list\">\n                {tasks.map(task => (\n                    <li key={task.id} className={`task-item ${task.completed ? 'completed' : ''}`}>\n                        <span onClick={() => handleToggleCompletion(task.id)}>\n                            {task.name}\n                        </span>\n                    </li>\n                ))}\n            </ul>\n            <div className=\"task-input-container\">\n                <input\n                    type=\"text\"\n                    value={newTask}\n                    onChange={(e) => setNewTask(e.target.value)}\n                    placeholder=\"Enter a new task...\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}