{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/Homepage.js\";\nimport React, { useState } from 'react';\nimport HabitTracker from './HabitTracker';\nimport TaskView from './TaskView';\nimport Journal from './Journal';\nimport AdaptiveCalendar from './AdaptiveCalendar';\nimport { useCalendar } from './CalendarContext'; // Import the useCalendar hook\nimport './Homepage.css';\nconst Homepage = () => {\n  const {\n    selectedDate,\n    changeDate\n  } = useCalendar(); // Use the selectedDate from CalendarContext\n  const [activeTab, setActiveTab] = useState('today');\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n\n  // Function to format the selected date for display in MST\n  const formatDateForDisplay = dateString => {\n    // Create a Date object from the date string in MST timezone\n    const [year, month, day] = dateString.split('-'); // Split the 'YYYY-MM-DD' format\n    const date = new Date(year, month - 1, day); // Create a new Date object (month is 0-based)\n\n    const options = {\n      month: 'long',\n      day: 'numeric'\n    }; // Formatting options for the date\n    const formattedDate = date.toLocaleDateString('en-US', options); // e.g., \"January 24\"\n    return {\n      formattedDate,\n      year\n    };\n  };\n  const {\n    formattedDate,\n    year\n  } = formatDateForDisplay(selectedDate);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homepage-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow-button\",\n    onClick: () => changeDate(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"\\u25C0 \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-display-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, formattedDate), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-display-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, year), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"arrow-button\",\n    onClick: () => changeDate(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"\\u25B6 \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homepage-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleTabChange('today'),\n    className: activeTab === 'today' ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleTabChange('week'),\n    className: activeTab === 'week' ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Week\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleTabChange('month'),\n    className: activeTab === 'month' ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Month\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homepage-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, activeTab === 'today' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HabitTracker, {\n    viewMode: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AdaptiveCalendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Journal, {\n    selectedDate: selectedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), activeTab === 'week' && /*#__PURE__*/React.createElement(TaskView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 34\n    }\n  }), activeTab === 'month' && /*#__PURE__*/React.createElement(HabitTracker, {\n    viewMode: \"monthly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 35\n    }\n  })));\n};\nexport default Homepage;","map":{"version":3,"names":["React","useState","HabitTracker","TaskView","Journal","AdaptiveCalendar","useCalendar","Homepage","selectedDate","changeDate","activeTab","setActiveTab","handleTabChange","tab","formatDateForDisplay","dateString","year","month","day","split","date","Date","options","formattedDate","toLocaleDateString","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","viewMode"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/Homepage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport HabitTracker from './HabitTracker';\nimport TaskView from './TaskView';\nimport Journal from './Journal';\nimport AdaptiveCalendar from './AdaptiveCalendar';\nimport { useCalendar } from './CalendarContext'; // Import the useCalendar hook\nimport './Homepage.css';\n\nconst Homepage = () => {\n  const { selectedDate, changeDate } = useCalendar(); // Use the selectedDate from CalendarContext\n  const [activeTab, setActiveTab] = useState('today');\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  // Function to format the selected date for display in MST\n  const formatDateForDisplay = (dateString) => {\n    // Create a Date object from the date string in MST timezone\n    const [year, month, day] = dateString.split('-'); // Split the 'YYYY-MM-DD' format\n    const date = new Date(year, month - 1, day); // Create a new Date object (month is 0-based)\n\n    const options = { month: 'long', day: 'numeric' }; // Formatting options for the date\n    const formattedDate = date.toLocaleDateString('en-US', options); // e.g., \"January 24\"\n    return { formattedDate, year };\n  };\n\n  const { formattedDate, year } = formatDateForDisplay(selectedDate);\n\n  return (\n    <div className=\"homepage-container\">\n      {/* Date display section */}\n      <div className=\"date-display\">\n        <button className=\"arrow-button\" onClick={() => changeDate(-1)}>\n          ◀ {/* Left arrow */}\n        </button>\n        <div className=\"date-display-large\">{formattedDate}</div>\n        <div className=\"date-display-small\">{year}</div>\n        <button className=\"arrow-button\" onClick={() => changeDate(1)}>\n          ▶ {/* Right arrow */}\n        </button>\n      </div>\n\n      {/* Tab controls */}\n      <div className=\"homepage-controls\">\n        <button onClick={() => handleTabChange('today')} className={activeTab === 'today' ? 'active' : ''}>\n          Today\n        </button>\n        <button onClick={() => handleTabChange('week')} className={activeTab === 'week' ? 'active' : ''}>\n          Week\n        </button>\n        <button onClick={() => handleTabChange('month')} className={activeTab === 'month' ? 'active' : ''}>\n          Month\n        </button>\n      </div>\n\n      {/* Main content based on the active tab */}\n      <div className=\"homepage-content\">\n        {activeTab === 'today' && (\n          <div className=\"today-view\">\n            <HabitTracker viewMode=\"default\" />\n            <AdaptiveCalendar />\n            <Journal selectedDate={selectedDate} />\n          </div>\n        )}\n        {activeTab === 'week' && <TaskView />}\n        {activeTab === 'month' && <HabitTracker viewMode=\"monthly\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}