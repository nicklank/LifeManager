{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/AdaptiveCalendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getTasksByDate, updateTaskTime } from '../apiService';\nimport './adaptivecalendar.css';\nconst AdaptiveCalendar = ({\n  selectedDate\n}) => {\n  const [tasks, setTasks] = useState([]);\n  const [timeSlots, setTimeSlots] = useState([{\n    time: '08:00 AM',\n    tasks: []\n  }, {\n    time: '09:00 AM',\n    tasks: []\n  }, {\n    time: '10:00 AM',\n    tasks: []\n  }, {\n    time: '11:00 AM',\n    tasks: []\n  }, {\n    time: '12:00 PM',\n    tasks: []\n  }, {\n    time: '01:00 PM',\n    tasks: []\n  }, {\n    time: '02:00 PM',\n    tasks: []\n  }, {\n    time: '03:00 PM',\n    tasks: []\n  }, {\n    time: '04:00 PM',\n    tasks: []\n  }, {\n    time: '05:00 PM',\n    tasks: []\n  }]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const fetchedTasks = await getTasksByDate(selectedDate);\n        console.log('Fetched tasks:', fetchedTasks); // Add this line\n        setTasks(fetchedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [selectedDate]);\n  const handleDragStart = (e, taskId) => {\n    e.dataTransfer.setData('taskId', taskId);\n    e.target.classList.add('dragging');\n  };\n  const handleDragEnd = e => {\n    e.target.classList.remove('dragging');\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.currentTarget.classList.add('drag-over');\n  };\n  const handleDragLeave = e => {\n    e.currentTarget.classList.remove('drag-over');\n  };\n  const handleDrop = async (e, timeSlot) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drag-over');\n    const taskId = e.dataTransfer.getData('taskId');\n    await handleTaskDrop(taskId, timeSlot);\n  };\n  const handleTaskDrop = async (taskId, newTimeSlot) => {\n    try {\n      // Update task time slot in the backend\n      const updatedTask = await updateTaskTime(taskId, {\n        timeSlot: newTimeSlot\n      });\n\n      // Remove task from the current tasks list\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n\n      // Add task to the new time slot\n      setTimeSlots(prevTimeSlots => {\n        const updatedTimeSlots = prevTimeSlots.map(slot => {\n          if (slot.time === newTimeSlot) {\n            return {\n              ...slot,\n              tasks: [...slot.tasks, updatedTask]\n            };\n          }\n          return slot;\n        });\n        return updatedTimeSlots;\n      });\n    } catch (error) {\n      console.error('Error updating task time:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adaptive-calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"adaptive-calendar-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Time Slot\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Tasks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, timeSlots.map((slot, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"time-slot\",\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    onDrop: e => handleDrop(e, slot.time),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, slot.time), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"task-slot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, slot.tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: \"task-item\",\n    draggable: true,\n    onDragStart: e => handleDragStart(e, task.id),\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, task.name))))))));\n};\nexport default AdaptiveCalendar;","map":{"version":3,"names":["React","useState","useEffect","getTasksByDate","updateTaskTime","AdaptiveCalendar","selectedDate","tasks","setTasks","timeSlots","setTimeSlots","time","fetchTasks","fetchedTasks","console","log","error","handleDragStart","e","taskId","dataTransfer","setData","target","classList","add","handleDragEnd","remove","handleDragOver","preventDefault","currentTarget","handleDragLeave","handleDrop","timeSlot","getData","handleTaskDrop","newTimeSlot","updatedTask","prevTasks","filter","task","id","prevTimeSlots","updatedTimeSlots","map","slot","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","index","key","onDragOver","onDragLeave","onDrop","draggable","onDragStart","onDragEnd","name"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/AdaptiveCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTasksByDate, updateTaskTime } from '../apiService';\nimport './adaptivecalendar.css';\n\nconst AdaptiveCalendar = ({ selectedDate }) => {\n    const [tasks, setTasks] = useState([]);\n    const [timeSlots, setTimeSlots] = useState([\n        { time: '08:00 AM', tasks: [] },\n        { time: '09:00 AM', tasks: [] },\n        { time: '10:00 AM', tasks: [] },\n        { time: '11:00 AM', tasks: [] },\n        { time: '12:00 PM', tasks: [] },\n        { time: '01:00 PM', tasks: [] },\n        { time: '02:00 PM', tasks: [] },\n        { time: '03:00 PM', tasks: [] },\n        { time: '04:00 PM', tasks: [] },\n        { time: '05:00 PM', tasks: [] },\n    ]);\n\n    useEffect(() => {\n    const fetchTasks = async () => {\n        try {\n            const fetchedTasks = await getTasksByDate(selectedDate);\n            console.log('Fetched tasks:', fetchedTasks); // Add this line\n            setTasks(fetchedTasks);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n        fetchTasks();\n    }, [selectedDate]);\n\n    const handleDragStart = (e, taskId) => {\n        e.dataTransfer.setData('taskId', taskId);\n        e.target.classList.add('dragging');\n    };\n\n    const handleDragEnd = (e) => {\n        e.target.classList.remove('dragging');\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        e.currentTarget.classList.add('drag-over');\n    };\n\n    const handleDragLeave = (e) => {\n        e.currentTarget.classList.remove('drag-over');\n    };\n\n    const handleDrop = async (e, timeSlot) => {\n        e.preventDefault();\n        e.currentTarget.classList.remove('drag-over');\n\n        const taskId = e.dataTransfer.getData('taskId');\n        await handleTaskDrop(taskId, timeSlot);\n    };\n\n    const handleTaskDrop = async (taskId, newTimeSlot) => {\n        try {\n            // Update task time slot in the backend\n            const updatedTask = await updateTaskTime(taskId, { timeSlot: newTimeSlot });\n\n            // Remove task from the current tasks list\n            setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n\n            // Add task to the new time slot\n            setTimeSlots(prevTimeSlots => {\n                const updatedTimeSlots = prevTimeSlots.map(slot => {\n                    if (slot.time === newTimeSlot) {\n                        return { ...slot, tasks: [...slot.tasks, updatedTask] };\n                    }\n                    return slot;\n                });\n                return updatedTimeSlots;\n            });\n        } catch (error) {\n            console.error('Error updating task time:', error);\n        }\n    };\n\n    return (\n        <div className=\"adaptive-calendar-container\">\n            <table className=\"adaptive-calendar-table\">\n                <thead>\n                    <tr>\n                        <th>Time Slot</th>\n                        <th>Tasks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {timeSlots.map((slot, index) => (\n                        <tr key={index}>\n                            <td\n                                className=\"time-slot\"\n                                onDragOver={handleDragOver}\n                                onDragLeave={handleDragLeave}\n                                onDrop={(e) => handleDrop(e, slot.time)}\n                            >\n                                {slot.time}\n                            </td>\n                            <td className=\"task-slot\">\n                                {slot.tasks.map(task => (\n                                    <div\n                                        key={task.id}\n                                        className=\"task-item\"\n                                        draggable\n                                        onDragStart={(e) => handleDragStart(e, task.id)}\n                                        onDragEnd={handleDragEnd}\n                                    >\n                                        {task.name}\n                                    </div>\n                                ))}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AdaptiveCalendar;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,cAAc,QAAQ,eAAe;AAC9D,OAAO,wBAAwB;AAE/B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CACvC;IAAEU,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAEI,IAAI,EAAE,UAAU;IAAEJ,KAAK,EAAE;EAAG,CAAC,CAClC,CAAC;EAEFL,SAAS,CAAC,MAAM;IAChB,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMV,cAAc,CAACG,YAAY,CAAC;QACvDQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,YAAY,CAAC,CAAC,CAAC;QAC7CL,QAAQ,CAACK,YAAY,CAAC;MAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEGJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAElB,MAAMW,eAAe,GAAGA,CAACC,CAAC,EAAEC,MAAM,KAAK;IACnCD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC;IACxCD,CAAC,CAACI,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EACtC,CAAC;EAED,MAAMC,aAAa,GAAIP,CAAC,IAAK;IACzBA,CAAC,CAACI,MAAM,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;EACzC,CAAC;EAED,MAAMC,cAAc,GAAIT,CAAC,IAAK;IAC1BA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClBV,CAAC,CAACW,aAAa,CAACN,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;EAC9C,CAAC;EAED,MAAMM,eAAe,GAAIZ,CAAC,IAAK;IAC3BA,CAAC,CAACW,aAAa,CAACN,SAAS,CAACG,MAAM,CAAC,WAAW,CAAC;EACjD,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAOb,CAAC,EAAEc,QAAQ,KAAK;IACtCd,CAAC,CAACU,cAAc,CAAC,CAAC;IAClBV,CAAC,CAACW,aAAa,CAACN,SAAS,CAACG,MAAM,CAAC,WAAW,CAAC;IAE7C,MAAMP,MAAM,GAAGD,CAAC,CAACE,YAAY,CAACa,OAAO,CAAC,QAAQ,CAAC;IAC/C,MAAMC,cAAc,CAACf,MAAM,EAAEa,QAAQ,CAAC;EAC1C,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAOf,MAAM,EAAEgB,WAAW,KAAK;IAClD,IAAI;MACA;MACA,MAAMC,WAAW,GAAG,MAAMhC,cAAc,CAACe,MAAM,EAAE;QAAEa,QAAQ,EAAEG;MAAY,CAAC,CAAC;;MAE3E;MACA3B,QAAQ,CAAC6B,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKrB,MAAM,CAAC,CAAC;;MAEnE;MACAT,YAAY,CAAC+B,aAAa,IAAI;QAC1B,MAAMC,gBAAgB,GAAGD,aAAa,CAACE,GAAG,CAACC,IAAI,IAAI;UAC/C,IAAIA,IAAI,CAACjC,IAAI,KAAKwB,WAAW,EAAE;YAC3B,OAAO;cAAE,GAAGS,IAAI;cAAErC,KAAK,EAAE,CAAC,GAAGqC,IAAI,CAACrC,KAAK,EAAE6B,WAAW;YAAE,CAAC;UAC3D;UACA,OAAOQ,IAAI;QACf,CAAC,CAAC;QACF,OAAOF,gBAAgB;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,oBACIhB,KAAA,CAAA6C,aAAA;IAAKC,SAAS,EAAC,6BAA6B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCpD,KAAA,CAAA6C,aAAA;IAAOC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtCpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAClBpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CACb,CACD,CAAC,eACRpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACK3C,SAAS,CAACkC,GAAG,CAAC,CAACC,IAAI,EAAES,KAAK,kBACvBrD,KAAA,CAAA6C,aAAA;IAAIS,GAAG,EAAED,KAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACXpD,KAAA,CAAA6C,aAAA;IACIC,SAAS,EAAC,WAAW;IACrBS,UAAU,EAAE5B,cAAe;IAC3B6B,WAAW,EAAE1B,eAAgB;IAC7B2B,MAAM,EAAGvC,CAAC,IAAKa,UAAU,CAACb,CAAC,EAAE0B,IAAI,CAACjC,IAAI,CAAE;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEvCR,IAAI,CAACjC,IACN,CAAC,eACLX,KAAA,CAAA6C,aAAA;IAAIC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBR,IAAI,CAACrC,KAAK,CAACoC,GAAG,CAACJ,IAAI,iBAChBvC,KAAA,CAAA6C,aAAA;IACIS,GAAG,EAAEf,IAAI,CAACC,EAAG;IACbM,SAAS,EAAC,WAAW;IACrBY,SAAS;IACTC,WAAW,EAAGzC,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEqB,IAAI,CAACC,EAAE,CAAE;IAChDoB,SAAS,EAAEnC,aAAc;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAExBb,IAAI,CAACsB,IACL,CACR,CACD,CACJ,CACP,CACE,CACJ,CACN,CAAC;AAEd,CAAC;AAED,eAAexD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}