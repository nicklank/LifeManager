{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = status => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n  const handleDateChange = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, isEditMode ? 'Done' : 'Edit Habits'), isEditMode && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"New Habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Add Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, currentDate), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"\\u2192\")), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 28\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n    const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n    const isCompleted = entry ? entry.completed : false;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(isCompleted))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: isEditMode ? \"3\" : \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 20\n    }\n  }, \"No habits found\")))));\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","currentDate","setCurrentDate","Date","toISOString","split","fetchHabits","response","data","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","habitId","filter","id","handleToggle","date","find","h","entry","entries","completed","updatedHabits","map","getStatusSymbol","status","handleDateChange","days","newDate","setDate","getDate","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","className","Array","isArray","length","isCompleted","key","colSpan"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status) => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n\n  const handleDateChange = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n\n  return (\n    <div>\n      <h1>Habit Tracker</h1>\n      <button onClick={() => setIsEditMode(!isEditMode)}>\n        {isEditMode ? 'Done' : 'Edit Habits'}\n      </button>\n      {isEditMode && (\n        <form onSubmit={addHabit}>\n          <input\n            type=\"text\"\n            value={newHabit}\n            onChange={(e) => setNewHabit(e.target.value)}\n            placeholder=\"New Habit\"\n          />\n          <button type=\"submit\">Add Habit</button>\n        </form>\n      )}\n      <div className=\"date-navigation\">\n        <button onClick={() => handleDateChange(-1)}>←</button>\n        <span>{currentDate}</span>\n        <button onClick={() => handleDateChange(1)}>→</button>\n      </div>\n      <table className=\"habit-table\">\n        <thead>\n          <tr>\n            <th>Habit</th>\n            <th>Status</th>\n            {isEditMode && <th>Actions</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n            const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n            const isCompleted = entry ? entry.completed : false;\n            return (\n              <tr key={habit.id}>\n                <td>{habit.name}</td>\n                <td>\n                  <button\n                    className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                    onClick={() => handleToggle(habit.id, currentDate)}\n                  >\n                    {getStatusSymbol(isCompleted)}\n                  </button>\n                </td>\n                {isEditMode && (\n                  <td>\n                    <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                  </td>\n                )}\n              </tr>\n            );\n          }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}