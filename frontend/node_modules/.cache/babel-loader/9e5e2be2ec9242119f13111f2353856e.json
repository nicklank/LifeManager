{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport WeekView from './WeekView'; // Import the WeekView component\nimport './HabitTracker.css'; // Ensure this file exists for styling\nimport './WeekView.css'; // Import WeekView styles\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({\n    habitId: null,\n    date: null\n  });\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  useEffect(() => {\n    if (viewMode === 'week') {\n      const startOfWeek = new Date(currentDate);\n      const day = startOfWeek.getDay();\n      const difference = (day <= 0 ? -6 : 1) - day; // Adjust if current date is before Monday\n      startOfWeek.setDate(startOfWeek.getDate() + difference);\n      setCurrentDate(startOfWeek.toISOString().split('T')[0]);\n    }\n  }, [viewMode]);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = (status, customValue) => {\n    if (status) return customValue || '✔️'; // Checkmark if no custom value\n    return ''; // No symbol for incomplete\n  };\n  const handleDateChange = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n  const handleDateInputChange = e => {\n    setCurrentDate(e.target.value);\n  };\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : viewMode === 'month' ? 'week' : 'default');\n  };\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({\n      habitId,\n      date\n    });\n  };\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = {\n        ...entry,\n        customValue: value,\n        completed: true\n      };\n      updateHabitEntry(entry.id, updatedEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = {\n        habit: habitId,\n        date,\n        customValue: value,\n        completed: true\n      };\n      createHabitEntry(newEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n  const renderDefaultView = () => /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 26\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n    const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n    const isCompleted = entry ? entry.completed : false;\n    const customValue = entry ? entry.customValue : '';\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      onDoubleClick: () => handleDoubleClick(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, editStatus.habitId === habit.id && editStatus.date === currentDate ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: customValue,\n      onChange: e => handleInputChange(e, habit.id, currentDate),\n      maxLength: \"1\",\n      autoFocus: true,\n      className: \"small-input\" // Add a class for styling\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(isCompleted, customValue))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: isEditMode ? \"3\" : \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 18\n    }\n  }, \"No habits found\"))));\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      value: currentDate,\n      onChange: handleDateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"habit-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, \"Day\"), habits.map(habit => /*#__PURE__*/React.createElement(\"th\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, habit.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, daysArray.map(day => {\n      const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day);\n      const dayLetter = date.toLocaleDateString('en-US', {\n        weekday: 'short'\n      }).charAt(0);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, day), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, dayLetter), habits.map(habit => {\n        const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n        const isCompleted = entry ? entry.completed : false;\n        const customValue = entry ? entry.customValue : '';\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: habit.id,\n          onDoubleClick: () => handleDoubleClick(habit.id, date.toISOString().split('T')[0]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 23\n          }\n        }, editStatus.habitId === habit.id && editStatus.date === date.toISOString().split('T')[0] ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          value: customValue,\n          onChange: e => handleInputChange(e, habit.id, date.toISOString().split('T')[0]),\n          maxLength: \"1\",\n          autoFocus: true,\n          className: \"small-input\" // Add a class for styling\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 27\n          }\n        }) : /*#__PURE__*/React.createElement(\"button\", {\n          className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n          onClick: () => handleToggle(habit.id, date.toISOString().split('T')[0]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 27\n          }\n        }, getStatusSymbol(isCompleted, customValue)));\n      }));\n    }))));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, \"Life Manager\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, isEditMode ? 'Done' : 'Edit Habits'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleViewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, viewMode === 'default' ? 'Switch to Month View' : viewMode === 'month' ? 'Switch to Week View' : 'Switch to Default View'), isEditMode && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"New Habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, \"Add Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: currentDate,\n    onChange: handleDateInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, \"\\u2192\")), viewMode === 'default' && renderDefaultView(), viewMode === 'month' && renderMonthView(), viewMode === 'week' && /*#__PURE__*/React.createElement(WeekView, {\n    currentDate: currentDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 31\n    }\n  }));\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","WeekView","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","currentDate","setCurrentDate","Date","toISOString","split","viewMode","setViewMode","editStatus","setEditStatus","habitId","date","fetchHabits","startOfWeek","day","getDay","difference","setDate","getDate","response","data","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","filter","id","handleToggle","find","h","entry","entries","completed","updatedHabits","map","getStatusSymbol","status","customValue","handleDateChange","days","newDate","handleDateInputChange","target","value","toggleViewMode","handleDoubleClick","handleInputChange","charAt","updatedEntry","then","catch","newEntry","renderDefaultView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","isCompleted","key","onDoubleClick","type","onChange","maxLength","autoFocus","onClick","colSpan","renderMonthView","daysInMonth","daysArray","from","_","i","dayLetter","toLocaleDateString","weekday","onSubmit","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport WeekView from './WeekView'; // Import the WeekView component\nimport './HabitTracker.css'; // Ensure this file exists for styling\nimport './WeekView.css'; // Import WeekView styles\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({ habitId: null, date: null });\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  useEffect(() => {\n    if (viewMode === 'week') {\n      const startOfWeek = new Date(currentDate);\n      const day = startOfWeek.getDay();\n      const difference = (day <= 0 ? -6 : 1) - day; // Adjust if current date is before Monday\n      startOfWeek.setDate(startOfWeek.getDate() + difference);\n      setCurrentDate(startOfWeek.toISOString().split('T')[0]);\n    }\n  }, [viewMode]);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status, customValue) => {\n    if (status) return customValue || '✔️'; // Checkmark if no custom value\n    return ''; // No symbol for incomplete\n  };\n\n  const handleDateChange = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n\n  const handleDateInputChange = (e) => {\n    setCurrentDate(e.target.value);\n  };\n\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : (viewMode === 'month' ? 'week' : 'default'));\n  };\n\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({ habitId, date });\n  };\n\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = { ...entry, customValue: value, completed: true };\n      updateHabitEntry(entry.id, updatedEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = { habit: habitId, date, customValue: value, completed: true };\n      createHabitEntry(newEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: [...(h.entries || []), response.data] };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n\n  const renderDefaultView = () => (\n    <table className=\"habit-table\">\n      <thead>\n        <tr>\n          <th>Habit</th>\n          <th>Status</th>\n          {isEditMode && <th>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n          const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n          const isCompleted = entry ? entry.completed : false;\n          const customValue = entry ? entry.customValue : '';\n          return (\n            <tr key={habit.id}>\n              <td>{habit.name}</td>\n              <td onDoubleClick={() => handleDoubleClick(habit.id, currentDate)}>\n                {editStatus.habitId === habit.id && editStatus.date === currentDate ? (\n                  <input\n                    type=\"text\"\n                    value={customValue}\n                    onChange={(e) => handleInputChange(e, habit.id, currentDate)}\n                    maxLength=\"1\"\n                    autoFocus\n                    className=\"small-input\" // Add a class for styling\n                  />\n                ) : (\n                  <button\n                    className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                    onClick={() => handleToggle(habit.id, currentDate)}\n                  >\n                    {getStatusSymbol(isCompleted, customValue)}\n                  </button>\n                )}\n              </td>\n              {isEditMode && (\n                <td>\n                  <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                </td>\n              )}\n            </tr>\n          );\n        }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n      </tbody>\n    </table>\n  );\n\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n\n    return (\n      <div>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <table className=\"habit-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Day</th>\n              {habits.map(habit => (\n                <th key={habit.id}>{habit.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {daysArray.map(day => {\n              const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day);\n              const dayLetter = date.toLocaleDateString('en-US', { weekday: 'short' }).charAt(0);\n              return (\n                <tr key={day}>\n                  <td>{day}</td>\n                  <td>{dayLetter}</td>\n                  {habits.map(habit => {\n                    const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n                    const isCompleted = entry ? entry.completed : false;\n                    const customValue = entry ? entry.customValue : '';\n                    return (\n                      <td key={habit.id} onDoubleClick={() => handleDoubleClick(habit.id, date.toISOString().split('T')[0])}>\n                        {editStatus.habitId === habit.id && editStatus.date === date.toISOString().split('T')[0] ? (\n                          <input\n                            type=\"text\"\n                            value={customValue}\n                            onChange={(e) => handleInputChange(e, habit.id, date.toISOString().split('T')[0])}\n                            maxLength=\"1\"\n                            autoFocus\n                            className=\"small-input\" // Add a class for styling\n                          />\n                        ) : (\n                          <button\n                            className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                            onClick={() => handleToggle(habit.id, date.toISOString().split('T')[0])}\n                          >\n                            {getStatusSymbol(isCompleted, customValue)}\n                          </button>\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Life Manager</h1>\n      <button onClick={() => setIsEditMode(!isEditMode)}>\n        {isEditMode ? 'Done' : 'Edit Habits'}\n      </button>\n      <button onClick={toggleViewMode}>\n        {viewMode === 'default' ? 'Switch to Month View' : (viewMode === 'month' ? 'Switch to Week View' : 'Switch to Default View')}\n      </button>\n      {isEditMode && (\n        <form onSubmit={addHabit}>\n          <input\n            type=\"text\"\n            value={newHabit}\n            onChange={(e) => setNewHabit(e.target.value)}\n            placeholder=\"New Habit\"\n          />\n          <button type=\"submit\">Add Habit</button>\n        </form>\n      )}\n      <div className=\"date-navigation\">\n        <button onClick={() => handleDateChange(-1)}>←</button>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <button onClick={() => handleDateChange(1)}>→</button>\n      </div>\n      {viewMode === 'default' && renderDefaultView()}\n      {viewMode === 'month' && renderMonthView()}\n      {viewMode === 'week' && <WeekView currentDate={currentDate} />}\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}