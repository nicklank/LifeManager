{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/AdaptiveCalendar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { updateTaskTime, getTasksByDate } from './apiService'; // Make sure to import your API functions\n\nconst AdaptiveCalendar = () => {\n  const [tasks, setTasks] = useState([]);\n  const [timeSlots, setTimeSlots] = useState([]); // Assume you have time slots to manage\n\n  useEffect(() => {\n    // Fetch initial tasks and time slots if needed\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const date = getSelectedDate(); // Assume you have a method to get the selected date\n      const tasks = await getTasksByDate(date);\n      setTasks(tasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleDrop = async (taskId, newTimeSlot) => {\n    try {\n      // Update task time slot\n      const updatedTask = await updateTaskTime(taskId, {\n        timeSlot: newTimeSlot\n      });\n\n      // Remove task from the right column\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n\n      // Add task to the left column (time slots)\n      setTimeSlots(prevTimeSlots => {\n        const updatedTimeSlots = prevTimeSlots.map(slot => {\n          if (slot.time === newTimeSlot) {\n            return {\n              ...slot,\n              tasks: [...slot.tasks, updatedTask]\n            };\n          }\n          return slot;\n        });\n        return updatedTimeSlots;\n      });\n    } catch (error) {\n      console.error('Error updating task time:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adaptive-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-slots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, timeSlots.map(slot => /*#__PURE__*/React.createElement(\"div\", {\n    key: slot.time,\n    className: \"time-slot\",\n    onDrop: e => handleDrop(e.dataTransfer.getData('taskId'), slot.time),\n    onDragOver: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, slot.time), slot.tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, task.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: \"task\",\n    draggable: true,\n    onDragStart: e => e.dataTransfer.setData('taskId', task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, task.name))));\n};\nexport default AdaptiveCalendar;","map":{"version":3,"names":["React","useState","useEffect","updateTaskTime","getTasksByDate","AdaptiveCalendar","tasks","setTasks","timeSlots","setTimeSlots","fetchTasks","date","getSelectedDate","error","console","handleDrop","taskId","newTimeSlot","updatedTask","timeSlot","prevTasks","filter","task","id","prevTimeSlots","updatedTimeSlots","map","slot","time","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","onDrop","e","dataTransfer","getData","onDragOver","preventDefault","name","draggable","onDragStart","setData"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/AdaptiveCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { updateTaskTime, getTasksByDate } from './apiService'; // Make sure to import your API functions\n\nconst AdaptiveCalendar = () => {\n    const [tasks, setTasks] = useState([]);\n    const [timeSlots, setTimeSlots] = useState([]); // Assume you have time slots to manage\n\n    useEffect(() => {\n        // Fetch initial tasks and time slots if needed\n        fetchTasks();\n    }, []);\n\n    const fetchTasks = async () => {\n        try {\n            const date = getSelectedDate(); // Assume you have a method to get the selected date\n            const tasks = await getTasksByDate(date);\n            setTasks(tasks);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n    const handleDrop = async (taskId, newTimeSlot) => {\n        try {\n            // Update task time slot\n            const updatedTask = await updateTaskTime(taskId, { timeSlot: newTimeSlot });\n\n            // Remove task from the right column\n            setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n\n            // Add task to the left column (time slots)\n            setTimeSlots(prevTimeSlots => {\n                const updatedTimeSlots = prevTimeSlots.map(slot => {\n                    if (slot.time === newTimeSlot) {\n                        return { ...slot, tasks: [...slot.tasks, updatedTask] };\n                    }\n                    return slot;\n                });\n                return updatedTimeSlots;\n            });\n        } catch (error) {\n            console.error('Error updating task time:', error);\n        }\n    };\n\n    return (\n        <div className=\"adaptive-calendar\">\n            <div className=\"time-slots\">\n                {timeSlots.map(slot => (\n                    <div\n                        key={slot.time}\n                        className=\"time-slot\"\n                        onDrop={(e) => handleDrop(e.dataTransfer.getData('taskId'), slot.time)}\n                        onDragOver={(e) => e.preventDefault()}\n                    >\n                        <h3>{slot.time}</h3>\n                        {slot.tasks.map(task => (\n                            <div key={task.id} className=\"task\">\n                                {task.name}\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            <div className=\"task-list\">\n                {tasks.map(task => (\n                    <div\n                        key={task.id}\n                        className=\"task\"\n                        draggable\n                        onDragStart={(e) => e.dataTransfer.setData('taskId', task.id)}\n                    >\n                        {task.name}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default AdaptiveCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}