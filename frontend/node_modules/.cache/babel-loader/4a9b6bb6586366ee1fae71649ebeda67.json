{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js\";\nimport React, { useState } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = () => {\n  const [tasks, setTasks] = useState({\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: [],\n    Sunday: []\n  });\n  const [newTask, setNewTask] = useState({\n    Monday: '',\n    Tuesday: '',\n    Wednesday: '',\n    Thursday: '',\n    Friday: '',\n    Saturday: '',\n    Sunday: ''\n  });\n  const handleAddTask = (day, task) => {\n    if (task) {\n      setTasks({\n        ...tasks,\n        [day]: [...tasks[day], {\n          task,\n          completed: false\n        }]\n      });\n      setNewTask({\n        ...newTask,\n        [day]: ''\n      }); // Clear the input field\n    }\n  };\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? {\n      ...t,\n      completed: !t.completed\n    } : t);\n    setTasks({\n      ...tasks,\n      [day]: newTasks\n    });\n  };\n  const handleInputChange = (day, event) => {\n    setNewTask({\n      ...newTask,\n      [day]: event.target.value\n    });\n  };\n  const handleInputKeyPress = (day, event) => {\n    if (event.key === 'Enter') {\n      handleAddTask(day, newTask[day]);\n    }\n  };\n  const renderTasks = day => tasks[day].map((task, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: task.completed ? 'completed-task' : '',\n    onClick: () => handleToggleTask(day, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, task.task));\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"week-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, daysOfWeek.map(day => /*#__PURE__*/React.createElement(\"tr\", {\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"day-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, day.charAt(0), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), \"7\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, renderTasks(day)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask[day],\n    onChange: event => handleInputChange(day, event),\n    onKeyPress: event => handleInputKeyPress(day, event),\n    placeholder: \"New Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default WeekView;","map":{"version":3,"names":["React","useState","WeekView","tasks","setTasks","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","newTask","setNewTask","handleAddTask","day","task","completed","handleToggleTask","index","newTasks","map","t","i","handleInputChange","event","target","value","handleInputKeyPress","key","renderTasks","createElement","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","daysOfWeek","charAt","type","onChange","onKeyPress","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/WeekView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WeekView.css'; // Ensure this file exists for styling\n\nconst WeekView = () => {\n  const [tasks, setTasks] = useState({\n    Monday: [], Tuesday: [], Wednesday: [], Thursday: [], Friday: [], Saturday: [], Sunday: []\n  });\n\n  const [newTask, setNewTask] = useState({\n    Monday: '', Tuesday: '', Wednesday: '', Thursday: '', Friday: '', Saturday: '', Sunday: ''\n  });\n\n  const handleAddTask = (day, task) => {\n    if (task) {\n      setTasks({ ...tasks, [day]: [...tasks[day], { task, completed: false }] });\n      setNewTask({ ...newTask, [day]: '' }); // Clear the input field\n    }\n  };\n\n  const handleToggleTask = (day, index) => {\n    const newTasks = tasks[day].map((t, i) => i === index ? { ...t, completed: !t.completed } : t);\n    setTasks({ ...tasks, [day]: newTasks });\n  };\n\n  const handleInputChange = (day, event) => {\n    setNewTask({ ...newTask, [day]: event.target.value });\n  };\n\n  const handleInputKeyPress = (day, event) => {\n    if (event.key === 'Enter') {\n      handleAddTask(day, newTask[day]);\n    }\n  };\n\n  const renderTasks = (day) => (\n    tasks[day].map((task, index) => (\n      <li key={index} className={task.completed ? 'completed-task' : ''} onClick={() => handleToggleTask(day, index)}>\n        {task.task}\n      </li>\n    ))\n  );\n\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n  return (\n    <div className=\"week-view\">\n      <table className=\"week-table\">\n        <thead>\n          <tr>\n            <th></th> {/* Empty header for day initials and date */}\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {daysOfWeek.map(day => (\n            <tr key={day}>\n              <td className=\"day-column\">\n                {day.charAt(0)} {/* Display first letter of the day */}\n                <br />\n                {/* Add logic here to display the correct date */}\n                {/* Example: */}\n                7\n              </td>\n              <td>\n                <ul>\n                  {renderTasks(day)}\n                </ul>\n                <input\n                  type=\"text\"\n                  value={newTask[day]}\n                  onChange={(event) => handleInputChange(day, event)}\n                  onKeyPress={(event) => handleInputKeyPress(day, event)}\n                  placeholder=\"New Task\"\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default WeekView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}