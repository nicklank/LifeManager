{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // Import Drag and Drop components\nimport apiService from '../apiService';\nimport './TaskView.css';\nimport { useCalendar } from './CalendarContext';\nconst TaskView = () => {\n  const {\n    selectedDate,\n    setSelectedDate\n  } = useCalendar();\n  const [newTask, setNewTask] = useState(\"\");\n  const [weekTasks, setWeekTasks] = useState({});\n  const getWeekRange = date => {\n    const currentDate = new Date(date);\n    const day = currentDate.getDay();\n    const start = new Date(currentDate);\n    const end = new Date(currentDate);\n    start.setDate(currentDate.getDate() - (day === 0 ? 6 : day - 1));\n    end.setDate(currentDate.getDate() + (day === 0 ? 0 : 7 - day));\n    return {\n      start: start.toISOString().split('T')[0],\n      end: end.toISOString().split('T')[0]\n    };\n  };\n  const formatHeaderDate = () => {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const today = new Date();\n    const dayOfWeek = days[today.getDay()];\n    const month = months[today.getMonth()];\n    const day = today.getDate();\n    const year = today.getFullYear();\n    return `Week of ${dayOfWeek}, ${month} ${day}, ${year}`;\n  };\n  useEffect(() => {\n    const fetchWeeklyTasks = async () => {\n      const {\n        start,\n        end\n      } = getWeekRange(selectedDate);\n      try {\n        const response = await apiService.getTasksByDateRange(start, end);\n        const groupedTasks = response.reduce((acc, task) => {\n          const formattedDate = task.date.split('T')[0];\n          if (!acc[formattedDate]) {\n            acc[formattedDate] = [];\n          }\n          acc[formattedDate].push(task);\n          return acc;\n        }, {});\n        setWeekTasks(groupedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks for the week:', error);\n      }\n    };\n    fetchWeeklyTasks();\n  }, [selectedDate]);\n  const handleAddTask = async date => {\n    if (newTask.trim()) {\n      try {\n        const taskData = {\n          name: newTask,\n          completed: false,\n          date\n        };\n        const response = await apiService.addTask(taskData);\n        setWeekTasks(prev => ({\n          ...prev,\n          [date]: [...(prev[date] || []), response]\n        }));\n        setNewTask(\"\");\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  const handleToggleCompletion = async taskId => {\n    try {\n      const updatedTask = await apiService.toggleTaskCompletion(taskId);\n      const date = updatedTask.date.split('T')[0];\n      setWeekTasks(prev => ({\n        ...prev,\n        [date]: prev[date].map(task => task.id === taskId ? updatedTask : task)\n      }));\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await apiService.deleteTask(taskId);\n      const taskDate = Object.keys(weekTasks).find(date => weekTasks[date].some(task => task.id === taskId));\n      setWeekTasks(prev => ({\n        ...prev,\n        [taskDate]: prev[taskDate].filter(task => task.id !== taskId)\n      }));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Function to handle drag end event\n  const handleDragEnd = (result, date) => {\n    if (!result.destination) return; // If the item was dropped outside of any droppable area\n\n    const reorderedTasks = Array.from(weekTasks[date]);\n    const [movedTask] = reorderedTasks.splice(result.source.index, 1);\n    reorderedTasks.splice(result.destination.index, 0, movedTask);\n    setWeekTasks(prev => ({\n      ...prev,\n      [date]: reorderedTasks\n    }));\n  };\n  const {\n    start\n  } = getWeekRange(selectedDate);\n  const startDate = new Date(start);\n  const daysOfWeek = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(startDate);\n    day.setDate(startDate.getDate() + i);\n    return {\n      date: day.toISOString().split('T')[0],\n      dayOfWeek: day.toLocaleDateString('en-US', {\n        weekday: 'long'\n      }),\n      formattedDate: day.toLocaleDateString('en-US', {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      })\n    };\n  });\n  const navigateDay = direction => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(newDate.getDate() + (direction === 'next' ? 1 : -1));\n    setSelectedDate(newDate.toISOString().split('T')[0]);\n  };\n  const resetWeek = () => {\n    setSelectedDate(new Date().toISOString().split('T')[0]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-view-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateDay('previous'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Previous Day\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetWeek,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Reset to Today\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateDay('next'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Next Day\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, formatHeaderDate()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell date-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell tasks-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"Tasks\")), daysOfWeek.map(({\n    date,\n    dayOfWeek,\n    formattedDate\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: date,\n    className: \"task-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell date-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, `${dayOfWeek}, ${formattedDate}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-table-cell tasks-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => handleDragEnd(result, date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n    className: \"task-list\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }), (weekTasks[date] || []).map((task, index) => /*#__PURE__*/React.createElement(Draggable, {\n    key: task.id,\n    draggableId: String(task.id),\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 49\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"li\", Object.assign({\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleToggleCompletion(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 61\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteTask(task.id),\n    className: \"delete-task-button\",\n    \"aria-label\": \"Delete task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 61\n    }\n  }, \"\\u274C\")))), provided.placeholder))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask,\n    onChange: e => setNewTask(e.target.value),\n    placeholder: \"Enter a new task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAddTask(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, \"Add Task\")))))));\n};\nexport default TaskView;","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","apiService","useCalendar","TaskView","selectedDate","setSelectedDate","newTask","setNewTask","weekTasks","setWeekTasks","getWeekRange","date","currentDate","Date","day","getDay","start","end","setDate","getDate","toISOString","split","formatHeaderDate","days","months","today","dayOfWeek","month","getMonth","year","getFullYear","fetchWeeklyTasks","response","getTasksByDateRange","groupedTasks","reduce","acc","task","formattedDate","push","error","console","handleAddTask","trim","taskData","name","completed","addTask","prev","handleToggleCompletion","taskId","updatedTask","toggleTaskCompletion","map","id","handleDeleteTask","deleteTask","taskDate","Object","keys","find","some","filter","handleDragEnd","result","destination","reorderedTasks","Array","from","movedTask","splice","source","index","startDate","daysOfWeek","length","_","i","toLocaleDateString","weekday","navigateDay","direction","newDate","resetWeek","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","key","onDragEnd","droppableId","provided","assign","droppableProps","ref","innerRef","draggableId","String","draggableProps","dragHandleProps","placeholder","type","value","onChange","e","target"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // Import Drag and Drop components\nimport apiService from '../apiService';\nimport './TaskView.css';\nimport { useCalendar } from './CalendarContext';\n\nconst TaskView = () => {\n    const { selectedDate, setSelectedDate } = useCalendar();\n    const [newTask, setNewTask] = useState(\"\");\n    const [weekTasks, setWeekTasks] = useState({});\n\n    const getWeekRange = (date) => {\n        const currentDate = new Date(date);\n        const day = currentDate.getDay();\n        const start = new Date(currentDate);\n        const end = new Date(currentDate);\n\n        start.setDate(currentDate.getDate() - (day === 0 ? 6 : day - 1));\n        end.setDate(currentDate.getDate() + (day === 0 ? 0 : 7 - day));\n\n        return { start: start.toISOString().split('T')[0], end: end.toISOString().split('T')[0] };\n    };\n\n    const formatHeaderDate = () => {\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n        const today = new Date();\n        const dayOfWeek = days[today.getDay()];\n        const month = months[today.getMonth()];\n        const day = today.getDate();\n        const year = today.getFullYear();\n\n        return `Week of ${dayOfWeek}, ${month} ${day}, ${year}`;\n    };\n\n    useEffect(() => {\n        const fetchWeeklyTasks = async () => {\n            const { start, end } = getWeekRange(selectedDate);\n            try {\n                const response = await apiService.getTasksByDateRange(start, end);\n                const groupedTasks = response.reduce((acc, task) => {\n                    const formattedDate = task.date.split('T')[0];\n                    if (!acc[formattedDate]) {\n                        acc[formattedDate] = [];\n                    }\n                    acc[formattedDate].push(task);\n                    return acc;\n                }, {});\n                setWeekTasks(groupedTasks);\n            } catch (error) {\n                console.error('Error fetching tasks for the week:', error);\n            }\n        };\n\n        fetchWeeklyTasks();\n    }, [selectedDate]);\n\n    const handleAddTask = async (date) => {\n        if (newTask.trim()) {\n            try {\n                const taskData = {\n                    name: newTask,\n                    completed: false,\n                    date,\n                };\n                const response = await apiService.addTask(taskData);\n                setWeekTasks(prev => ({\n                    ...prev,\n                    [date]: [...(prev[date] || []), response]\n                }));\n                setNewTask(\"\");\n            } catch (error) {\n                console.error('Error adding task:', error);\n            }\n        }\n    };\n\n    const handleToggleCompletion = async (taskId) => {\n        try {\n            const updatedTask = await apiService.toggleTaskCompletion(taskId);\n            const date = updatedTask.date.split('T')[0];\n            setWeekTasks(prev => ({\n                ...prev,\n                [date]: prev[date].map(task => task.id === taskId ? updatedTask : task)\n            }));\n        } catch (error) {\n            console.error('Error toggling task completion:', error);\n        }\n    };\n\n    const handleDeleteTask = async (taskId) => {\n        try {\n            await apiService.deleteTask(taskId);\n            const taskDate = Object.keys(weekTasks).find(date => weekTasks[date].some(task => task.id === taskId));\n            setWeekTasks(prev => ({\n                ...prev,\n                [taskDate]: prev[taskDate].filter(task => task.id !== taskId)\n            }));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    // Function to handle drag end event\n    const handleDragEnd = (result, date) => {\n        if (!result.destination) return; // If the item was dropped outside of any droppable area\n\n        const reorderedTasks = Array.from(weekTasks[date]);\n        const [movedTask] = reorderedTasks.splice(result.source.index, 1);\n        reorderedTasks.splice(result.destination.index, 0, movedTask);\n\n        setWeekTasks(prev => ({\n            ...prev,\n            [date]: reorderedTasks\n        }));\n    };\n\n    const { start } = getWeekRange(selectedDate);\n    const startDate = new Date(start);\n    const daysOfWeek = Array.from({ length: 7 }, (_, i) => {\n        const day = new Date(startDate);\n        day.setDate(startDate.getDate() + i);\n        return {\n            date: day.toISOString().split('T')[0],\n            dayOfWeek: day.toLocaleDateString('en-US', { weekday: 'long' }),\n            formattedDate: day.toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' })\n        };\n    });\n\n    const navigateDay = (direction) => {\n        const newDate = new Date(selectedDate);\n        newDate.setDate(newDate.getDate() + (direction === 'next' ? 1 : -1));\n        setSelectedDate(newDate.toISOString().split('T')[0]);\n    };\n\n    const resetWeek = () => {\n        setSelectedDate(new Date().toISOString().split('T')[0]);\n    };\n\n    return (\n        <div className=\"task-view-container\">\n            <div className=\"task-view-controls\">\n                <button onClick={() => navigateDay('previous')}>Previous Day</button>\n                <button onClick={resetWeek}>Reset to Today</button>\n                <button onClick={() => navigateDay('next')}>Next Day</button>\n            </div>\n            <h2>{formatHeaderDate()}</h2>\n            <div className=\"task-table\">\n                <div className=\"task-table-header\">\n                    <div className=\"task-table-cell date-cell\">Date</div>\n                    <div className=\"task-table-cell tasks-cell\">Tasks</div>\n                </div>\n                {daysOfWeek.map(({ date, dayOfWeek, formattedDate }) => (\n                    <div key={date} className=\"task-table-row\">\n                        <div className=\"task-table-cell date-cell\">{`${dayOfWeek}, ${formattedDate}`}</div>\n                        <div className=\"task-table-cell tasks-cell\">\n                            <DragDropContext onDragEnd={(result) => handleDragEnd(result, date)}>\n                                <Droppable droppableId={date}>\n                                    {(provided) => (\n                                        <ul\n                                            className=\"task-list\"\n                                            {...provided.droppableProps}\n                                            ref={provided.innerRef}\n                                        >\n                                            {(weekTasks[date] || []).map((task, index) => (\n                                                <Draggable key={task.id} draggableId={String(task.id)} index={index}>\n                                                    {(provided) => (\n                                                        <li\n                                                            className={`task-item ${task.completed ? 'completed' : ''}`}\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                        >\n                                                            <span onClick={() => handleToggleCompletion(task.id)}>\n                                                                {task.name}\n                                                            </span>\n                                                            <button\n                                                                onClick={() => handleDeleteTask(task.id)}\n                                                                className=\"delete-task-button\"\n                                                                aria-label=\"Delete task\"\n                                                            >\n                                                                ❌\n                                                            </button>\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n                                    )}\n                                </Droppable>\n                            </DragDropContext>\n                            <div className=\"task-input-container\">\n                                <input\n                                    type=\"text\"\n                                    value={newTask}\n                                    onChange={(e) => setNewTask(e.target.value)}\n                                    placeholder=\"Enter a new task...\"\n                                />\n                                <button onClick={() => handleAddTask(date)}>Add Task</button>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default TaskView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}