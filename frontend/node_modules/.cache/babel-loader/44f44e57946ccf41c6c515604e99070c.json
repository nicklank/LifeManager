{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/CalendarContext.js\";\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create a Context for the calendar\nconst CalendarContext = createContext();\nexport const CalendarProvider = ({\n  children\n}) => {\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]); // Default to today\n\n  // Function to get the start and end of the week based on the current date\n  const getWeekDateRange = () => {\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(startOfWeek.getDate() - (startOfWeek.getDay() + 6) % 7); // Monday as first day\n\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n    return {\n      start: startOfWeek.toISOString().split('T')[0],\n      end: endOfWeek.toISOString().split('T')[0]\n    };\n  };\n\n  // Function to handle date change\n  const changeDate = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate);\n  };\n\n  // Expose currentDate and helper functions\n  return /*#__PURE__*/React.createElement(CalendarContext.Provider, {\n    value: {\n      currentDate: currentDate.toISOString().split('T')[0],\n      getWeekDateRange,\n      changeDate\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n// Custom hook for using the calendar context\nexport const useCalendar = () => useContext(CalendarContext);","map":{"version":3,"names":["React","createContext","useState","useContext","CalendarContext","CalendarProvider","children","selectedDate","setSelectedDate","Date","toISOString","split","getWeekDateRange","startOfWeek","currentDate","setDate","getDate","getDay","endOfWeek","start","end","changeDate","days","newDate","setCurrentDate","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useCalendar"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/CalendarContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create a Context for the calendar\nconst CalendarContext = createContext();\n\nexport const CalendarProvider = ({ children }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]); // Default to today\n\n  // Function to get the start and end of the week based on the current date\n  const getWeekDateRange = () => {\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(startOfWeek.getDate() - ((startOfWeek.getDay() + 6) % 7)); // Monday as first day\n\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n    return {\n      start: startOfWeek.toISOString().split('T')[0],\n      end: endOfWeek.toISOString().split('T')[0],\n    };\n  };\n\n  // Function to handle date change\n  const changeDate = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate);\n  };\n\n  // Expose currentDate and helper functions\n  return (\n    <CalendarContext.Provider value={{ currentDate: currentDate.toISOString().split('T')[0], getWeekDateRange, changeDate }}>\n      {children}\n    </CalendarContext.Provider>\n  );\n};\n\n// Custom hook for using the calendar context\nexport const useCalendar = () => useContext(CalendarContext);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AACA,MAAMC,eAAe,GAAGH,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAIO,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1F;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAG,IAAIJ,IAAI,CAACK,WAAW,CAAC;IACzCD,WAAW,CAACE,OAAO,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAI,CAACH,WAAW,CAACI,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;;IAE/E,MAAMC,SAAS,GAAG,IAAIT,IAAI,CAACI,WAAW,CAAC;IACvCK,SAAS,CAACH,OAAO,CAACG,SAAS,CAACF,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAE1C,OAAO;MACLG,KAAK,EAAEN,WAAW,CAACH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9CS,GAAG,EAAEF,SAAS,CAACR,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;EACH,CAAC;;EAED;EACA,MAAMU,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,OAAO,GAAG,IAAId,IAAI,CAACK,WAAW,CAAC;IACrCS,OAAO,CAACR,OAAO,CAACQ,OAAO,CAACP,OAAO,CAAC,CAAC,GAAGM,IAAI,CAAC;IACzCE,cAAc,CAACD,OAAO,CAAC;EACzB,CAAC;;EAED;EACA,oBACEvB,KAAA,CAAAyB,aAAA,CAACrB,eAAe,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEb,WAAW,EAAEA,WAAW,CAACJ,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAAEC,gBAAgB;MAAES;IAAW,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrH3B,QACuB,CAAC;AAE/B,CAAC;;AAED;AACA,OAAO,MAAM4B,WAAW,GAAGA,CAAA,KAAM/B,UAAU,CAACC,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}