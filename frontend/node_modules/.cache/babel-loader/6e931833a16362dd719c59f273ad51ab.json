{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst API_URL = 'http://localhost:8000/api/';\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  useEffect(() => {\n    // Fetch habits from the backend\n    axios.get(`${API_URL}habits/`).then(response => {\n      setHabits(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the habits!\", error);\n    });\n  }, []);\n  const addHabit = () => {\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    console.log('Adding habit:', habit);\n    axios.post(`${API_URL}habits/`, habit).then(response => {\n      console.log('Habit added successfully:', response.data);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    }).catch(error => {\n      console.error(\"There was an error creating the habit!\", error);\n    });\n  };\n  const handleToggle = (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    const entry = habit.entries.find(e => e.date === date);\n    if (entry) {\n      // Update existing entry\n      axios.put(`${API_URL}habitentries/${entry.id}/`, {\n        ...entry,\n        completed: !entry.completed\n      }).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      }).catch(error => {\n        console.error(\"There was an error updating the habit entry!\", error);\n      });\n    } else {\n      // Create new entry\n      axios.post(`${API_URL}habitentries/`, {\n        habit: habitId,\n        date,\n        completed: true\n      }).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...h.entries, response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      }).catch(error => {\n        console.error(\"There was an error creating the habit entry!\", error);\n      });\n    }\n  };\n  const getStatusSymbol = status => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Completed Today\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, habits.map(habit => /*#__PURE__*/React.createElement(\"tr\", {\n    key: habit.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `status-button ${habit.completed ? 'completed' : 'not-completed'}`,\n    onClick: () => toggleHabitCompletion(habit.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, habit.completed ? '✔' : '')))))));\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","axios","API_URL","HabitTracker","habits","setHabits","newHabit","setNewHabit","get","then","response","data","catch","error","console","addHabit","trim","log","habit","name","description","post","handleToggle","habitId","date","find","h","id","entry","entries","e","put","completed","updatedHabits","map","getStatusSymbol","status","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","key","onClick","toggleHabitCompletion"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst API_URL = 'http://localhost:8000/api/';\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n\n  useEffect(() => {\n    // Fetch habits from the backend\n    axios.get(`${API_URL}habits/`)\n      .then(response => {\n        setHabits(response.data);\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the habits!\", error);\n      });\n  }, []);\n\n  const addHabit = () => {\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n    console.log('Adding habit:', habit);\n\n    axios.post(`${API_URL}habits/`, habit)\n      .then(response => {\n        console.log('Habit added successfully:', response.data);\n        setHabits([...habits, response.data]);\n        setNewHabit('');\n      })\n      .catch(error => {\n        console.error(\"There was an error creating the habit!\", error);\n      });\n  };\n\n  const handleToggle = (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    const entry = habit.entries.find(e => e.date === date);\n\n    if (entry) {\n      // Update existing entry\n      axios.put(`${API_URL}habitentries/${entry.id}/`, { ...entry, completed: !entry.completed })\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n        })\n        .catch(error => {\n          console.error(\"There was an error updating the habit entry!\", error);\n        });\n    } else {\n      // Create new entry\n      axios.post(`${API_URL}habitentries/`, { habit: habitId, date, completed: true })\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: [...h.entries, response.data] };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n        })\n        .catch(error => {\n          console.error(\"There was an error creating the habit entry!\", error);\n        });\n    }\n  };\n\n  const getStatusSymbol = (status) => {\n    if (status) return '✔️'; // Checkmark\n    return ''; // No symbol for incomplete\n  };\n\n  return (\n  <div>\n    <h1>Habit Tracker</h1>\n    <table className=\"habit-table\">\n      <thead>\n        <tr>\n          <th>Habit</th>\n          <th>Completed Today</th>\n        </tr>\n      </thead>\n      <tbody>\n        {habits.map((habit) => (\n          <tr key={habit.id}>\n            <td>{habit.name}</td>\n            <td>\n              <button\n                className={`status-button ${\n                  habit.completed ? 'completed' : 'not-completed'\n                }`}\n                onClick={() => toggleHabitCompletion(habit.id)}\n              >\n                {habit.completed ? '✔' : ''}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}