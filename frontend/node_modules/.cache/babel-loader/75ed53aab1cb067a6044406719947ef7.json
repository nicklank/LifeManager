{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/AdaptiveCalendar.js\";\nimport React, { useEffect, useState } from 'react';\nimport './AdaptiveCalendar.css';\nimport { getTasksByDate, updateTaskTime } from '../apiService'; // Import the updateTaskTime function\nimport { useCalendar } from './CalendarContext'; // Import the useCalendar hook\n\nconst AdaptiveCalendar = () => {\n  const {\n    selectedDate\n  } = useCalendar(); // Get the selectedDate from CalendarContext\n  const [tasks, setTasks] = useState([]);\n  const [draggedTask, setDraggedTask] = useState(null); // State to keep track of the dragged task\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const fetchedTasks = await getTasksByDate(selectedDate); // Use selectedDate from CalendarContext\n        setTasks(fetchedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [selectedDate]); // Re-fetch tasks when selectedDate changes\n\n  const handleDragStart = task => {\n    setDraggedTask(task); // Set the dragged task\n  };\n  const handleDrop = async (event, timeSlot) => {\n    event.preventDefault(); // Prevent default behavior\n\n    if (draggedTask) {\n      try {\n        // Update the task with the new time slot\n        await updateTaskTime(draggedTask.id, {\n          time: timeSlot\n        });\n        // Refresh the tasks\n        const updatedTasks = await getTasksByDate(selectedDate);\n        setTasks(updatedTasks);\n        setDraggedTask(null); // Clear the dragged task\n      } catch (error) {\n        console.error('Error updating task time:', error);\n      }\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault(); // Allow drop\n    event.target.classList.add('drag-over');\n  };\n  const handleDragLeave = event => {\n    event.preventDefault();\n    event.target.classList.remove('drag-over');\n  };\n\n  // Generating time slots from 7 AM to 11 PM\n  const timeSlots = Array.from({\n    length: 17\n  }, (_, i) => {\n    const hour = 7 + i;\n    return hour > 12 ? `${hour - 12} PM` : `${hour} AM`;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adaptive-calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"adaptive-calendar-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Tasks\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, timeSlots.map((slot, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"time-slot\",\n    onDrop: event => handleDrop(event, slot),\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, slot), index === 0 && /*#__PURE__*/React.createElement(\"td\", {\n    className: \"task-slot\",\n    rowSpan: timeSlots.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: \"task-item\",\n    draggable: true,\n    onDragStart: () => handleDragStart(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, task.name))))))));\n};\nexport default AdaptiveCalendar;","map":{"version":3,"names":["React","useEffect","useState","getTasksByDate","updateTaskTime","useCalendar","AdaptiveCalendar","selectedDate","tasks","setTasks","draggedTask","setDraggedTask","fetchTasks","fetchedTasks","error","console","handleDragStart","task","handleDrop","event","timeSlot","preventDefault","id","time","updatedTasks","handleDragOver","target","classList","add","handleDragLeave","remove","timeSlots","Array","from","length","_","i","hour","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","index","key","onDrop","onDragOver","onDragLeave","rowSpan","draggable","onDragStart","name"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/AdaptiveCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AdaptiveCalendar.css';\nimport { getTasksByDate, updateTaskTime } from '../apiService'; // Import the updateTaskTime function\nimport { useCalendar } from './CalendarContext'; // Import the useCalendar hook\n\nconst AdaptiveCalendar = () => {\n    const { selectedDate } = useCalendar(); // Get the selectedDate from CalendarContext\n    const [tasks, setTasks] = useState([]);\n    const [draggedTask, setDraggedTask] = useState(null); // State to keep track of the dragged task\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const fetchedTasks = await getTasksByDate(selectedDate); // Use selectedDate from CalendarContext\n                setTasks(fetchedTasks);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        fetchTasks();\n    }, [selectedDate]); // Re-fetch tasks when selectedDate changes\n\n    const handleDragStart = (task) => {\n        setDraggedTask(task); // Set the dragged task\n    };\n\n    const handleDrop = async (event, timeSlot) => {\n        event.preventDefault(); // Prevent default behavior\n\n        if (draggedTask) {\n            try {\n                // Update the task with the new time slot\n                await updateTaskTime(draggedTask.id, { time: timeSlot });\n                // Refresh the tasks\n                const updatedTasks = await getTasksByDate(selectedDate);\n                setTasks(updatedTasks);\n                setDraggedTask(null); // Clear the dragged task\n            } catch (error) {\n                console.error('Error updating task time:', error);\n            }\n        }\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault(); // Allow drop\n        event.target.classList.add('drag-over');\n    };\n\n    const handleDragLeave = (event) => {\n        event.preventDefault();\n        event.target.classList.remove('drag-over');\n    };\n\n    // Generating time slots from 7 AM to 11 PM\n    const timeSlots = Array.from({ length: 17 }, (_, i) => {\n        const hour = 7 + i;\n        return hour > 12 ? `${hour - 12} PM` : `${hour} AM`;\n    });\n\n    return (\n        <div className=\"adaptive-calendar-container\">\n            <table className=\"adaptive-calendar-table\">\n                <thead>\n                    <tr>\n                        <th>Time</th>\n                        <th>Tasks</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {timeSlots.map((slot, index) => (\n                        <tr key={index}>\n                            <td\n                                className=\"time-slot\"\n                                onDrop={(event) => handleDrop(event, slot)}\n                                onDragOver={handleDragOver}\n                                onDragLeave={handleDragLeave}\n                            >\n                                {slot}\n                            </td>\n                            {index === 0 && (\n                                <td\n                                    className=\"task-slot\"\n                                    rowSpan={timeSlots.length}\n                                >\n                                    {tasks.map((task) => (\n                                        <div\n                                            key={task.id}\n                                            className=\"task-item\"\n                                            draggable\n                                            onDragStart={() => handleDragStart(task)}\n                                        >\n                                            {task.name}\n                                        </div>\n                                    ))}\n                                </td>\n                            )}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AdaptiveCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}