{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({\n    habitId: null,\n    date: null\n  });\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n  const addHabit = async e => {\n    e.preventDefault();\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n    const habit = {\n      name: newHabit,\n      description: ''\n    };\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n  const deleteHabitById = async habitId => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, {\n          ...entry,\n          completed: !entry.completed\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({\n          habit: habitId,\n          date,\n          completed: true\n        });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n  const getStatusSymbol = (status, customValue) => {\n    if (status) return customValue || '✔️'; // Checkmark if no custom value\n    return ''; // No symbol for incomplete\n  };\n  const handleDateChange = days => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n  const handleDateInputChange = e => {\n    setCurrentDate(e.target.value);\n  };\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({\n      habitId,\n      date\n    });\n  };\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = {\n        ...entry,\n        customValue: value,\n        completed: true\n      };\n      updateHabitEntry(entry.id, updatedEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: h.entries.map(e => e.id === entry.id ? response.data : e)\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = {\n        habit: habitId,\n        date,\n        customValue: value,\n        completed: true\n      };\n      createHabitEntry(newEntry).then(response => {\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return {\n              ...h,\n              entries: [...(h.entries || []), response.data]\n            };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n        setEditStatus({\n          habitId: null,\n          date: null\n        });\n      }).catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n  const renderDefaultView = () => /*#__PURE__*/React.createElement(\"table\", {\n    className: \"habit-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Habit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Status\"), isEditMode && /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 26\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n    const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n    const isCompleted = entry ? entry.completed : false;\n    const customValue = entry ? entry.customValue : '';\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, habit.name), /*#__PURE__*/React.createElement(\"td\", {\n      onDoubleClick: () => handleDoubleClick(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, editStatus.habitId === habit.id && editStatus.date === currentDate ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: customValue,\n      onChange: e => handleInputChange(e, habit.id, currentDate),\n      maxLength: \"1\",\n      autoFocus: true,\n      className: \"small-input\" // Add a class for styling\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"button\", {\n      className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n      onClick: () => handleToggle(habit.id, currentDate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, getStatusSymbol(isCompleted, customValue))), isEditMode && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => deleteHabitById(habit.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, \"Delete\")));\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: isEditMode ? \"3\" : \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 18\n    }\n  }, \"No habits found\"))));\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      value: currentDate,\n      onChange: handleDateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"habit-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Day\"), habits.map(habit => /*#__PURE__*/React.createElement(\"th\", {\n      key: habit.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, habit.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, daysArray.map(day => {\n      const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day);\n      const dayLetter = date.toLocaleDateString('en-US', {\n        weekday: 'short'\n      }).charAt(0);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, day), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, dayLetter), habits.map(habit => {\n        const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n        const isCompleted = entry ? entry.completed : false;\n        const customValue = entry ? entry.customValue : '';\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: habit.id,\n          onDoubleClick: () => handleDoubleClick(habit.id, date.toISOString().split('T')[0]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 23\n          }\n        }, editStatus.habitId === habit.id && editStatus.date === date.toISOString().split('T')[0] ? /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          value: customValue,\n          onChange: e => handleInputChange(e, habit.id, date.toISOString().split('T')[0]),\n          maxLength: \"1\",\n          autoFocus: true,\n          className: \"small-input\" // Add a class for styling\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 27\n          }\n        }) : /*#__PURE__*/React.createElement(\"button\", {\n          className: `status-button ${isCompleted ? 'completed' : 'not-completed'}`,\n          onClick: () => handleToggle(habit.id, date.toISOString().split('T')[0]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 27\n          }\n        }, getStatusSymbol(isCompleted, customValue)));\n      }));\n    }))));\n  };\n  const renderWeekView = () => {\n    const startDate = new Date(currentDate);\n    const dayOfWeek = startDate.getDay();\n    const startOfWeek = new Date(startDate);\n    startOfWeek.setDate(startDate.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1)); // Monday as the first day of the week\n\n    const daysOfWeek = Array.from({\n      length: 7\n    }, (_, i) => {\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      return date;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      value: currentDate,\n      onChange: handleDateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"week-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, daysOfWeek.map((date, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"week-day-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, date.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }), \", \", date.getDate()), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, habits.map(habit => {\n      const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n      const isCompleted = entry ? entry.completed : false;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: habit.id,\n        className: isCompleted ? 'completed-item' : '',\n        onClick: () => handleToggle(habit.id, date.toISOString().split('T')[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }\n      }, habit.name);\n    }))))))));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, \"Habit Tracker\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsEditMode(!isEditMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, isEditMode ? 'Done' : 'Edit Habits'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleViewMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, viewMode === 'default' ? 'Switch to Month View' : 'Switch to Default View'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setViewMode(viewMode === 'week' ? 'default' : 'week'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, viewMode === 'week' ? 'Switch to Default View' : 'Switch to Week View'), isEditMode && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addHabit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newHabit,\n    onChange: e => setNewHabit(e.target.value),\n    placeholder: \"New Habit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, \"Add Habit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, \"\\u2190\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: currentDate,\n    onChange: handleDateInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDateChange(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, \"\\u2192\")), viewMode === 'default' ? renderDefaultView() : viewMode === 'month' ? renderMonthView() : renderWeekView());\n};\nexport default HabitTracker;","map":{"version":3,"names":["React","useState","useEffect","getHabits","createHabit","deleteHabit","createHabitEntry","updateHabitEntry","HabitTracker","habits","setHabits","newHabit","setNewHabit","isEditMode","setIsEditMode","currentDate","setCurrentDate","Date","toISOString","split","viewMode","setViewMode","editStatus","setEditStatus","habitId","date","fetchHabits","response","data","error","console","addHabit","e","preventDefault","trim","log","habit","name","description","deleteHabitById","filter","id","handleToggle","find","h","entry","entries","completed","updatedHabits","map","getStatusSymbol","status","customValue","handleDateChange","days","newDate","setDate","getDate","handleDateInputChange","target","value","toggleViewMode","handleDoubleClick","handleInputChange","charAt","updatedEntry","then","catch","newEntry","renderDefaultView","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","isCompleted","key","onDoubleClick","type","onChange","maxLength","autoFocus","onClick","colSpan","renderMonthView","daysInMonth","daysArray","from","_","i","day","dayLetter","toLocaleDateString","weekday","renderWeekView","startDate","dayOfWeek","getDay","startOfWeek","daysOfWeek","index","onSubmit","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getHabits, createHabit, deleteHabit, createHabitEntry, updateHabitEntry } from '../apiService';\nimport './HabitTracker.css'; // Ensure this file exists for styling\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]);\n  const [newHabit, setNewHabit] = useState('');\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date().toISOString().split('T')[0]); // Initialize with today's date\n  const [viewMode, setViewMode] = useState('default'); // Track view mode\n  const [editStatus, setEditStatus] = useState({ habitId: null, date: null });\n\n  useEffect(() => {\n    fetchHabits();\n  }, []);\n\n  const fetchHabits = async () => {\n    try {\n      const response = await getHabits();\n      setHabits(response.data);\n    } catch (error) {\n      console.error('Error fetching habits:', error);\n    }\n  };\n\n  const addHabit = async (e) => {\n    e.preventDefault();\n\n    if (!newHabit.trim()) {\n      console.log('Habit name cannot be empty');\n      return;\n    }\n\n    const habit = { name: newHabit, description: '' };\n\n    try {\n      const response = await createHabit(habit);\n      setHabits([...habits, response.data]);\n      setNewHabit('');\n    } catch (error) {\n      console.error('Error creating habit:', error);\n    }\n  };\n\n  const deleteHabitById = async (habitId) => {\n    try {\n      await deleteHabit(habitId);\n      setHabits(habits.filter(habit => habit.id !== habitId));\n    } catch (error) {\n      console.error('Error deleting habit:', error);\n    }\n  };\n\n  const handleToggle = async (habitId, date) => {\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      try {\n        const response = await updateHabitEntry(entry.id, { ...entry, completed: !entry.completed });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error updating habit entry:', error);\n      }\n    } else {\n      try {\n        const response = await createHabitEntry({ habit: habitId, date, completed: true });\n        const updatedHabits = habits.map(h => {\n          if (h.id === habitId) {\n            return { ...h, entries: [...(h.entries || []), response.data] };\n          }\n          return h;\n        });\n        setHabits(updatedHabits);\n      } catch (error) {\n        console.error('Error creating habit entry:', error);\n      }\n    }\n  };\n\n  const getStatusSymbol = (status, customValue) => {\n    if (status) return customValue || '✔️'; // Checkmark if no custom value\n    return ''; // No symbol for incomplete\n  };\n\n  const handleDateChange = (days) => {\n    const newDate = new Date(currentDate);\n    newDate.setDate(newDate.getDate() + days);\n    setCurrentDate(newDate.toISOString().split('T')[0]);\n  };\n\n  const handleDateInputChange = (e) => {\n    setCurrentDate(e.target.value);\n  };\n\n  const toggleViewMode = () => {\n    setViewMode(viewMode === 'default' ? 'month' : 'default');\n  };\n\n  const handleDoubleClick = (habitId, date) => {\n    setEditStatus({ habitId, date });\n  };\n\n  const handleInputChange = (e, habitId, date) => {\n    const value = e.target.value.charAt(0); // Only take the first character\n    const habit = habits.find(h => h.id === habitId);\n    if (!habit) return;\n\n    const entry = habit.entries ? habit.entries.find(e => e.date === date) : null;\n\n    if (entry) {\n      // Update existing entry\n      const updatedEntry = { ...entry, customValue: value, completed: true };\n      updateHabitEntry(entry.id, updatedEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: h.entries.map(e => e.id === entry.id ? response.data : e) };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error updating habit entry:', error));\n    } else {\n      // Create new entry\n      const newEntry = { habit: habitId, date, customValue: value, completed: true };\n      createHabitEntry(newEntry)\n        .then(response => {\n          const updatedHabits = habits.map(h => {\n            if (h.id === habitId) {\n              return { ...h, entries: [...(h.entries || []), response.data] };\n            }\n            return h;\n          });\n          setHabits(updatedHabits);\n          setEditStatus({ habitId: null, date: null });\n        })\n        .catch(error => console.error('Error creating habit entry:', error));\n    }\n  };\n\n  const renderDefaultView = () => (\n    <table className=\"habit-table\">\n      <thead>\n        <tr>\n          <th>Habit</th>\n          <th>Status</th>\n          {isEditMode && <th>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {Array.isArray(habits) && habits.length > 0 ? habits.map(habit => {\n          const entry = habit.entries ? habit.entries.find(e => e.date === currentDate) : null;\n          const isCompleted = entry ? entry.completed : false;\n          const customValue = entry ? entry.customValue : '';\n          return (\n            <tr key={habit.id}>\n              <td>{habit.name}</td>\n              <td onDoubleClick={() => handleDoubleClick(habit.id, currentDate)}>\n                {editStatus.habitId === habit.id && editStatus.date === currentDate ? (\n                  <input\n                    type=\"text\"\n                    value={customValue}\n                    onChange={(e) => handleInputChange(e, habit.id, currentDate)}\n                    maxLength=\"1\"\n                    autoFocus\n                    className=\"small-input\" // Add a class for styling\n                  />\n                ) : (\n                  <button\n                    className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                    onClick={() => handleToggle(habit.id, currentDate)}\n                  >\n                    {getStatusSymbol(isCompleted, customValue)}\n                  </button>\n                )}\n              </td>\n              {isEditMode && (\n                <td>\n                  <button onClick={() => deleteHabitById(habit.id)}>Delete</button>\n                </td>\n              )}\n            </tr>\n          );\n        }) : <tr><td colSpan={isEditMode ? \"3\" : \"2\"}>No habits found</td></tr>}\n      </tbody>\n    </table>\n  );\n\n  const renderMonthView = () => {\n    const daysInMonth = new Date(currentDate.split('-')[0], currentDate.split('-')[1], 0).getDate();\n    const daysArray = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n\n    return (\n      <div>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <table className=\"habit-table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Day</th>\n              {habits.map(habit => (\n                <th key={habit.id}>{habit.name}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {daysArray.map(day => {\n              const date = new Date(currentDate.split('-')[0], currentDate.split('-')[1] - 1, day);\n              const dayLetter = date.toLocaleDateString('en-US', { weekday: 'short' }).charAt(0);\n              return (\n                <tr key={day}>\n                  <td>{day}</td>\n                  <td>{dayLetter}</td>\n                  {habits.map(habit => {\n                    const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n                    const isCompleted = entry ? entry.completed : false;\n                    const customValue = entry ? entry.customValue : '';\n                    return (\n                      <td key={habit.id} onDoubleClick={() => handleDoubleClick(habit.id, date.toISOString().split('T')[0])}>\n                        {editStatus.habitId === habit.id && editStatus.date === date.toISOString().split('T')[0] ? (\n                          <input\n                            type=\"text\"\n                            value={customValue}\n                            onChange={(e) => handleInputChange(e, habit.id, date.toISOString().split('T')[0])}\n                            maxLength=\"1\"\n                            autoFocus\n                            className=\"small-input\" // Add a class for styling\n                          />\n                        ) : (\n                          <button\n                            className={`status-button ${isCompleted ? 'completed' : 'not-completed'}`}\n                            onClick={() => handleToggle(habit.id, date.toISOString().split('T')[0])}\n                          >\n                            {getStatusSymbol(isCompleted, customValue)}\n                          </button>\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const renderWeekView = () => {\n    const startDate = new Date(currentDate);\n    const dayOfWeek = startDate.getDay();\n    const startOfWeek = new Date(startDate);\n    startOfWeek.setDate(startDate.getDate() - (dayOfWeek === 0 ? 6 : dayOfWeek - 1)); // Monday as the first day of the week\n\n    const daysOfWeek = Array.from({ length: 7 }, (_, i) => {\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      return date;\n    });\n\n    return (\n      <div>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <table className=\"week-table\">\n          <tbody>\n            {daysOfWeek.map((date, index) => (\n              <tr key={index}>\n                <td className=\"week-day-header\">\n                  {date.toLocaleDateString('en-US', { weekday: 'long' })}, {date.getDate()}\n                </td>\n                <td>\n                  <ul>\n                    {habits.map(habit => {\n                      const entry = habit.entries ? habit.entries.find(e => e.date === date.toISOString().split('T')[0]) : null;\n                      const isCompleted = entry ? entry.completed : false;\n                      return (\n                        <li\n                          key={habit.id}\n                          className={isCompleted ? 'completed-item' : ''}\n                          onClick={() => handleToggle(habit.id, date.toISOString().split('T')[0])}\n                        >\n                          {habit.name}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Habit Tracker</h1>\n      <button onClick={() => setIsEditMode(!isEditMode)}>\n        {isEditMode ? 'Done' : 'Edit Habits'}\n      </button>\n      <button onClick={toggleViewMode}>\n        {viewMode === 'default' ? 'Switch to Month View' : 'Switch to Default View'}\n      </button>\n      <button onClick={() => setViewMode(viewMode === 'week' ? 'default' : 'week')}>\n        {viewMode === 'week' ? 'Switch to Default View' : 'Switch to Week View'}\n      </button>\n      {isEditMode && (\n        <form onSubmit={addHabit}>\n          <input\n            type=\"text\"\n            value={newHabit}\n            onChange={(e) => setNewHabit(e.target.value)}\n            placeholder=\"New Habit\"\n          />\n          <button type=\"submit\">Add Habit</button>\n        </form>\n      )}\n      <div className=\"date-navigation\">\n        <button onClick={() => handleDateChange(-1)}>←</button>\n        <input\n          type=\"date\"\n          value={currentDate}\n          onChange={handleDateInputChange}\n        />\n        <button onClick={() => handleDateChange(1)}>→</button>\n      </div>\n      {viewMode === 'default' ? renderDefaultView() : viewMode === 'month' ? renderMonthView() : renderWeekView()}\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}