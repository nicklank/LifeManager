{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/';\n\n// Habit API calls\nexport const getHabits = () => {\n  return axios.get(`${API_URL}habits/`);\n};\nexport const createHabit = habit => {\n  return axios.post(`${API_URL}habits/`, habit);\n};\nexport const updateHabit = (id, habit) => {\n  return axios.put(`${API_URL}habits/${id}/`, habit);\n};\nexport const deleteHabit = id => {\n  return axios.delete(`${API_URL}habits/${id}/`);\n};\n\n// Habit entry API calls\nexport const getHabitEntriesByDateRange = (startDate, endDate) => {\n  return axios.get(`${API_URL}habit-entries/?start_date=${startDate}&end_date=${endDate}`);\n};\nexport const createHabitEntry = habitEntry => {\n  return axios.post(`${API_URL}habit-entries/`, habitEntry);\n};\nexport const updateHabitEntry = (id, habitEntry) => {\n  return axios.put(`${API_URL}habit-entries/${id}/`, habitEntry);\n};\nexport const deleteHabitEntry = id => {\n  return axios.delete(`${API_URL}habit-entries/${id}/`);\n};\n\n// Task API calls\nexport const getTasksByDate = date => {\n  return axios.get(`${API_URL}tasks/?date=${date}`);\n};\nexport const addTask = task => {\n  return axios.post(`${API_URL}tasks/`, task);\n};\nexport const toggleTaskCompletion = id => {\n  return axios.patch(`${API_URL}tasks/${id}/`, {\n    completed: true\n  }); // Assuming you want to toggle to completed\n};\nexport const updateTask = (id, task) => {\n  return axios.put(`${API_URL}tasks/${id}/`, task);\n};\nexport const deleteTask = id => {\n  return axios.delete(`${API_URL}tasks/${id}/`);\n};\nexport default {\n  getHabits,\n  createHabit,\n  updateHabit,\n  deleteHabit,\n  getHabitEntriesByDateRange,\n  createHabitEntry,\n  updateHabitEntry,\n  deleteHabitEntry,\n  getTasksByDate,\n  addTask,\n  toggleTaskCompletion,\n  updateTask,\n  deleteTask\n};","map":{"version":3,"names":["axios","API_URL","getHabits","get","createHabit","habit","post","updateHabit","id","put","deleteHabit","delete","getHabitEntriesByDateRange","startDate","endDate","createHabitEntry","habitEntry","updateHabitEntry","deleteHabitEntry","getTasksByDate","date","addTask","task","toggleTaskCompletion","patch","completed","updateTask","deleteTask"],"sources":["/Users/nicklankau/life-tracker/frontend/src/apiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api/';\n\n// Habit API calls\nexport const getHabits = () => {\n    return axios.get(`${API_URL}habits/`);\n};\n\nexport const createHabit = (habit) => {\n    return axios.post(`${API_URL}habits/`, habit);\n};\n\nexport const updateHabit = (id, habit) => {\n    return axios.put(`${API_URL}habits/${id}/`, habit);\n};\n\nexport const deleteHabit = (id) => {\n    return axios.delete(`${API_URL}habits/${id}/`);\n};\n\n// Habit entry API calls\nexport const getHabitEntriesByDateRange = (startDate, endDate) => {\n    return axios.get(`${API_URL}habit-entries/?start_date=${startDate}&end_date=${endDate}`);\n};\n\nexport const createHabitEntry = (habitEntry) => {\n    return axios.post(`${API_URL}habit-entries/`, habitEntry);\n};\n\nexport const updateHabitEntry = (id, habitEntry) => {\n    return axios.put(`${API_URL}habit-entries/${id}/`, habitEntry);\n};\n\nexport const deleteHabitEntry = (id) => {\n    return axios.delete(`${API_URL}habit-entries/${id}/`);\n};\n\n// Task API calls\nexport const getTasksByDate = (date) => {\n    return axios.get(`${API_URL}tasks/?date=${date}`);\n};\n\nexport const addTask = (task) => {\n    return axios.post(`${API_URL}tasks/`, task);\n};\n\nexport const toggleTaskCompletion = (id) => {\n    return axios.patch(`${API_URL}tasks/${id}/`, { completed: true }); // Assuming you want to toggle to completed\n};\n\nexport const updateTask = (id, task) => {\n    return axios.put(`${API_URL}tasks/${id}/`, task);\n};\n\nexport const deleteTask = (id) => {\n    return axios.delete(`${API_URL}tasks/${id}/`);\n};\n\nexport default {\n    getHabits,\n    createHabit,\n    updateHabit,\n    deleteHabit,\n    getHabitEntriesByDateRange,\n    createHabitEntry,\n    updateHabitEntry,\n    deleteHabitEntry,\n    getTasksByDate,\n    addTask,\n    toggleTaskCompletion,\n    updateTask,\n    deleteTask\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;;AAE5C;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAOF,KAAK,CAACG,GAAG,CAAC,GAAGF,OAAO,SAAS,CAAC;AACzC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAIC,KAAK,IAAK;EAClC,OAAOL,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAEI,KAAK,CAAC;AACjD,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAACC,EAAE,EAAEH,KAAK,KAAK;EACtC,OAAOL,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,UAAUO,EAAE,GAAG,EAAEH,KAAK,CAAC;AACtD,CAAC;AAED,OAAO,MAAMK,WAAW,GAAIF,EAAE,IAAK;EAC/B,OAAOR,KAAK,CAACW,MAAM,CAAC,GAAGV,OAAO,UAAUO,EAAE,GAAG,CAAC;AAClD,CAAC;;AAED;AACA,OAAO,MAAMI,0BAA0B,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EAC9D,OAAOd,KAAK,CAACG,GAAG,CAAC,GAAGF,OAAO,6BAA6BY,SAAS,aAAaC,OAAO,EAAE,CAAC;AAC5F,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;EAC5C,OAAOhB,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,gBAAgB,EAAEe,UAAU,CAAC;AAC7D,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAACT,EAAE,EAAEQ,UAAU,KAAK;EAChD,OAAOhB,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,iBAAiBO,EAAE,GAAG,EAAEQ,UAAU,CAAC;AAClE,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAIV,EAAE,IAAK;EACpC,OAAOR,KAAK,CAACW,MAAM,CAAC,GAAGV,OAAO,iBAAiBO,EAAE,GAAG,CAAC;AACzD,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAIC,IAAI,IAAK;EACpC,OAAOpB,KAAK,CAACG,GAAG,CAAC,GAAGF,OAAO,eAAemB,IAAI,EAAE,CAAC;AACrD,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK;EAC7B,OAAOtB,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAEqB,IAAI,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIf,EAAE,IAAK;EACxC,OAAOR,KAAK,CAACwB,KAAK,CAAC,GAAGvB,OAAO,SAASO,EAAE,GAAG,EAAE;IAAEiB,SAAS,EAAE;EAAK,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAClB,EAAE,EAAEc,IAAI,KAAK;EACpC,OAAOtB,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,SAASO,EAAE,GAAG,EAAEc,IAAI,CAAC;AACpD,CAAC;AAED,OAAO,MAAMK,UAAU,GAAInB,EAAE,IAAK;EAC9B,OAAOR,KAAK,CAACW,MAAM,CAAC,GAAGV,OAAO,SAASO,EAAE,GAAG,CAAC;AACjD,CAAC;AAED,eAAe;EACXN,SAAS;EACTE,WAAW;EACXG,WAAW;EACXG,WAAW;EACXE,0BAA0B;EAC1BG,gBAAgB;EAChBE,gBAAgB;EAChBC,gBAAgB;EAChBC,cAAc;EACdE,OAAO;EACPE,oBAAoB;EACpBG,UAAU;EACVC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}