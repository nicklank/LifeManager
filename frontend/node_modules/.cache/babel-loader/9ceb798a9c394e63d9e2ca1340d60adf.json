{"ast":null,"code":"var _jsxFileName = \"/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useCalendar } from './CalendarContext';\nimport apiService from '../apiService';\nconst TaskView = () => {\n  const {\n    selectedDate\n  } = useCalendar();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await apiService.getTasksByDate(selectedDate);\n        setTasks(response.data || []); // Ensure we set an empty array if the response is undefined\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        setTasks([]); // Fallback to an empty array in case of an error\n      }\n    };\n    fetchTasks();\n  }, [selectedDate]);\n  const handleAddTask = async () => {\n    try {\n      if (newTask.trim()) {\n        const task = {\n          name: newTask,\n          date: selectedDate,\n          completed: false\n        };\n        await apiService.addTask(task);\n        setTasks([...tasks, task]); // Add the new task to the current list\n        setNewTask(''); // Clear the input field\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleToggleCompletion = async id => {\n    try {\n      await apiService.toggleTaskCompletion(id);\n      setTasks(tasks.map(task => task.id === id ? {\n        ...task,\n        completed: !task.completed\n      } : task));\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-view-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Tasks for \", selectedDate), tasks.length > 0 ?\n  /*#__PURE__*/\n  // Ensure tasks is an array and has items before mapping\n  React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleToggleCompletion(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, task.name)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"No tasks for this date.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTask,\n    onChange: e => setNewTask(e.target.value),\n    placeholder: \"Enter a new task...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Add Task\")));\n};\nexport default TaskView;","map":{"version":3,"names":["React","useState","useEffect","useCalendar","apiService","TaskView","selectedDate","tasks","setTasks","newTask","setNewTask","fetchTasks","response","getTasksByDate","data","error","console","handleAddTask","trim","task","name","date","completed","addTask","handleToggleCompletion","id","toggleTaskCompletion","map","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","key","onClick","type","value","onChange","e","target","placeholder"],"sources":["/Users/nicklankau/life-tracker/frontend/src/components/TaskView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCalendar } from './CalendarContext';\nimport apiService from '../apiService';\n\nconst TaskView = () => {\n    const { selectedDate } = useCalendar();\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await apiService.getTasksByDate(selectedDate);\n                setTasks(response.data || []);  // Ensure we set an empty array if the response is undefined\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n                setTasks([]);  // Fallback to an empty array in case of an error\n            }\n        };\n\n        fetchTasks();\n    }, [selectedDate]);\n\n    const handleAddTask = async () => {\n        try {\n            if (newTask.trim()) {\n                const task = {\n                    name: newTask,\n                    date: selectedDate,\n                    completed: false\n                };\n                await apiService.addTask(task);\n                setTasks([...tasks, task]);  // Add the new task to the current list\n                setNewTask('');  // Clear the input field\n            }\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const handleToggleCompletion = async (id) => {\n        try {\n            await apiService.toggleTaskCompletion(id);\n            setTasks(tasks.map(task =>\n                task.id === id ? { ...task, completed: !task.completed } : task\n            ));\n        } catch (error) {\n            console.error('Error toggling task completion:', error);\n        }\n    };\n\n    return (\n        <div className=\"task-view-container\">\n            <h2>Tasks for {selectedDate}</h2>\n            {tasks.length > 0 ? ( // Ensure tasks is an array and has items before mapping\n                <ul className=\"task-list\">\n                    {tasks.map(task => (\n                        <li key={task.id} className={`task-item ${task.completed ? 'completed' : ''}`}>\n                            <span onClick={() => handleToggleCompletion(task.id)}>\n                                {task.name}\n                            </span>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No tasks for this date.</p>\n            )}\n            <div className=\"task-input-container\">\n                <input\n                    type=\"text\"\n                    value={newTask}\n                    onChange={(e) => setNewTask(e.target.value)}\n                    placeholder=\"Enter a new task...\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}